{
	"name": "User_log_trigger",
	"properties": {
		"activities": [
			{
				"name": "User_Info_Update_on_Azure",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DeleteRecords",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"UserId"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"parallelCopies": 1,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "UserId",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "UserId",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Email",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "LastName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ClientId",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ClientId",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "SessionId",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "SessionId",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "IsLoggedIn",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "IsLoggedIn",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "created_date",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "created_date",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "HealthWorksPlan_SQL_Analytics",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "User_table_Azure_prod",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "GetUserId",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT DISTINCT  CONCAT(CHAR(39), UserId ,CHAR(39)) from OrgUser;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "HealthWorksPlan_SQL_Analytics",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "UserId",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetUserId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "UserId",
					"value": {
						"value": "@{activity('GetUserId').output.value}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "QueryFormatting",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "UserId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v2",
					"value": {
						"value": "@{replace(replace(replace(replace(replace(replace(replace(replace(replace(variables('UserId'),'[','('),']',')'),'\"',''),'{',''),'}',''),'UserId:',''),':',''),'(',''),')','')}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "DeleteRecords",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "QueryFormatting",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "DELETE FROM OrgUser WHERE UserId NOT IN (@{variables('v2')});\r\nselect 1 as abc;",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "User_table_Azure_prod",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"variables": {
			"UserId": {
				"type": "String"
			},
			"v2": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Triggered_Pipelines"
		},
		"annotations": [],
		"lastPublishTime": "2023-04-26T12:55:43Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
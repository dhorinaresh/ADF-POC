{
	"name": "SNP_Eligibles",
	"properties": {
		"activities": [
			{
				"name": "start time update",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('SNP Eligibles', 'SNP Eligibles_prep', (Select GETDATE()),'SNP Eligibles_base_data');\nSelect * from Audit;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dataset_sql",
						"type": "DatasetReference",
						"parameters": {
							"sql_server_dataset": {
								"value": "@pipeline().parameters.sql_server_dataset_name",
								"type": "Expression"
							},
							"db_name_dataset": {
								"value": "@pipeline().parameters.db_name",
								"type": "Expression"
							},
							"user_name_dataset": {
								"value": "@pipeline().parameters.user_name",
								"type": "Expression"
							},
							"password_dataset": {
								"value": "@pipeline().parameters.password",
								"type": "Expression"
							},
							"sql_table_name": "Audit"
						}
					}
				}
			},
			{
				"name": "SNP Eligibles",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "start time update",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Eligibles/SNP Eligibles"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks4_pfcluster3",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Pass_status_update_SNP Eligibles",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SNP Eligibles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dataset_sql",
						"type": "DatasetReference",
						"parameters": {
							"sql_server_dataset": {
								"value": "@pipeline().parameters.sql_server_dataset_name",
								"type": "Expression"
							},
							"db_name_dataset": {
								"value": "@pipeline().parameters.db_name",
								"type": "Expression"
							},
							"user_name_dataset": {
								"value": "@pipeline().parameters.user_name",
								"type": "Expression"
							},
							"password_dataset": {
								"value": "@pipeline().parameters.password",
								"type": "Expression"
							},
							"sql_table_name": "Audit"
						}
					}
				}
			},
			{
				"name": "Fail_status_update_SNP Eligibles",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SNP Eligibles",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dataset_sql",
						"type": "DatasetReference",
						"parameters": {
							"sql_server_dataset": {
								"value": "@pipeline().parameters.sql_server_dataset_name",
								"type": "Expression"
							},
							"db_name_dataset": {
								"value": "@pipeline().parameters.db_name",
								"type": "Expression"
							},
							"user_name_dataset": {
								"value": "@pipeline().parameters.user_name",
								"type": "Expression"
							},
							"password_dataset": {
								"value": "@pipeline().parameters.password",
								"type": "Expression"
							},
							"sql_table_name": "Audit"
						}
					}
				}
			},
			{
				"name": "send email update for SNP Eligibles script",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Fail_status_update_SNP Eligibles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
					"method": "POST",
					"body": {
						"value": "{\n \"title\":\"PIPELINE RUN FOR SNP Eligibles_script FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the SNP Eligibles_script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "start time update_data_upload_DB",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Pass_status_update_SNP Eligibles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('SNP Eligibles_script', 'SNP Eligibles_upload_DB', (Select GETDATE()),'SNP\nEligibles_base_data');\nSelect * from Audit;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dataset_sql",
						"type": "DatasetReference",
						"parameters": {
							"sql_server_dataset": {
								"value": "@pipeline().parameters.sql_server_dataset_name",
								"type": "Expression"
							},
							"db_name_dataset": {
								"value": "@pipeline().parameters.db_name",
								"type": "Expression"
							},
							"user_name_dataset": {
								"value": "@pipeline().parameters.user_name",
								"type": "Expression"
							},
							"password_dataset": {
								"value": "@pipeline().parameters.password",
								"type": "Expression"
							},
							"sql_table_name": "Audit"
						}
					}
				}
			},
			{
				"name": "Copy SNP Eligibles to Db",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete Existing record from DB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": " Eligibles / Output / DSNP_Eligible",
							"wildcardFileName": "p*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SNPEligibles",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "dataset_sql",
						"type": "DatasetReference",
						"parameters": {
							"sql_server_dataset": {
								"value": "@pipeline().parameters.sql_server_dataset_name",
								"type": "Expression"
							},
							"db_name_dataset": {
								"value": "@pipeline().parameters.db_name",
								"type": "Expression"
							},
							"user_name_dataset": {
								"value": "@pipeline().parameters.user_name",
								"type": "Expression"
							},
							"password_dataset": {
								"value": "@pipeline().parameters.password",
								"type": "Expression"
							},
							"sql_table_name": "SNP Eligibles"
						}
					}
				]
			},
			{
				"name": "Pass_status_update_SNP Eligibles to DB",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy SNP Eligibles to Db",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dataset_sql",
						"type": "DatasetReference",
						"parameters": {
							"sql_server_dataset": {
								"value": "@pipeline().parameters.sql_server_dataset_name",
								"type": "Expression"
							},
							"db_name_dataset": {
								"value": "@pipeline().parameters.db_name",
								"type": "Expression"
							},
							"user_name_dataset": {
								"value": "@pipeline().parameters.user_name",
								"type": "Expression"
							},
							"password_dataset": {
								"value": "@pipeline().parameters.password",
								"type": "Expression"
							},
							"sql_table_name": "Audit"
						}
					}
				}
			},
			{
				"name": "Fail_status_update_SNP Eligibles to DB",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy SNP Eligibles to Db",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dataset_sql",
						"type": "DatasetReference",
						"parameters": {
							"sql_server_dataset": {
								"value": "@pipeline().parameters.sql_server_dataset_name",
								"type": "Expression"
							},
							"db_name_dataset": {
								"value": "@pipeline().parameters.db_name",
								"type": "Expression"
							},
							"user_name_dataset": {
								"value": "@pipeline().parameters.user_name",
								"type": "Expression"
							},
							"password_dataset": {
								"value": "@pipeline().parameters.password",
								"type": "Expression"
							},
							"sql_table_name": "Audit"
						}
					}
				}
			},
			{
				"name": "SNP Eligibles pipeline run successfully",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Pass_status_update_SNP Eligibles to DB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
					"method": "POST",
					"body": {
						"value": "{\n \"title\":\"PIPELINE RUN FOR SNP Eligibles_to_DB IS SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"SNP Eligibles_to_DB completed sccessfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "send email update for fail SNP Eligibles to DB",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Fail_status_update_SNP Eligibles to DB",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
					"method": "POST",
					"body": {
						"value": "{\n \"title\":\"PIPELINE RUN FOR SNP Eligibles_to_DB FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the SNP Eligibles_to_DB and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Delete Existing record from DB",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "start time update_data_upload_DB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "DELETE FROM Eligible where Month = (SELECT DATENAME(month,GETDATE())) and Year = (SELECT YEAR(GETDATE()));\nSELECT TOP 10 * FROM Eligible;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dataset_sql",
						"type": "DatasetReference",
						"parameters": {
							"sql_server_dataset": {
								"value": "@pipeline().parameters.sql_server_dataset_name",
								"type": "Expression"
							},
							"db_name_dataset": {
								"value": "@pipeline().parameters.db_name",
								"type": "Expression"
							},
							"user_name_dataset": {
								"value": "@pipeline().parameters.user_name",
								"type": "Expression"
							},
							"password_dataset": {
								"value": "@pipeline().parameters.password",
								"type": "Expression"
							},
							"sql_table_name": "SNP Eligibles"
						}
					}
				}
			}
		],
		"parameters": {
			"sql_server_dataset_name": {
				"type": "String"
			},
			"db_name": {
				"type": "String"
			},
			"user_name": {
				"type": "String"
			},
			"password": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Hwai_Refresh/Hwai_Eligibles"
		},
		"annotations": []
	}
}
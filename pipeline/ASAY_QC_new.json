{
	"name": "ASAY_QC_new",
	"properties": {
		"activities": [
			{
				"name": "ASAY_QC",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "start time update",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Competitor Analysis/ASAY-QC-PARENTORG-ACQ-MERGER"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks4_pfcluster3",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "start time update",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('ASAY', 'ASAY_QC', (Select GETDATE()),'ASAY');\nSelect * from Audit;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "datalakesql_server_dataset",
						"type": "DatasetReference",
						"parameters": {
							"database": {
								"value": "@pipeline().parameters.database_name",
								"type": "Expression"
							},
							"table": "Audit"
						}
					}
				}
			},
			{
				"name": "end time update for Competitor_Analysis_file_processing",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ASAY_QC",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "datalakesql_server_dataset",
						"type": "DatasetReference",
						"parameters": {
							"database": {
								"value": "@pipeline().parameters.database_name",
								"type": "Expression"
							},
							"table": "Audit"
						}
					}
				}
			},
			{
				"name": "end time update for Competitor_Analysisfail",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ASAY_QC",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "datalakesql_server_dataset",
						"type": "DatasetReference",
						"parameters": {
							"database": {
								"value": "@pipeline().parameters.database_name",
								"type": "Expression"
							},
							"table": "Audit"
						}
					}
				}
			}
		],
		"parameters": {
			"database_name": {
				"type": "string",
				"defaultValue": "HWai_Staging_DB"
			}
		},
		"folder": {
			"name": "Monthly_Refresh_New_Pipelines/ASAY"
		},
		"annotations": []
	}
}
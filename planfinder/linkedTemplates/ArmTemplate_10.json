{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "planfinder"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Eligibles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Eligibles', 'Eligibles_prep', (Select GETDATE()),'Eligibles_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Eligibles_script",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Eligibles/Eligibles_script"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Pass_status_update_Eligibles",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Eligibles_script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_Eligibles",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Eligibles_script",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for Eligibles script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_Eligibles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Eligibles_script FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Eligibles_script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy Eligibles to Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existing record from DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "hwaicontainer/Eligibles/ Output/Eligibles/p*"
							},
							{
								"name": "Destination",
								"value": "dbo.@{'Eligibles'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Eligibles/ Output/Eligibles",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Is_Active_Ind",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Is_Active_Ind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Current_Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Current_Time",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Updated_Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Updated_Time",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Eligibles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "HWAI_Eligibles"
								}
							}
						]
					},
					{
						"name": "start time update_data_upload_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_Eligibles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Eligibles_script', 'Eligibles_upload_DB', (Select GETDATE()),'Eligibles_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Pass_status_update_Eligibles_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Eligibles to Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_Eligibles_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Eligibles to Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for fail Eligibles to DB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_Eligibles_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Eligibles_to_DB FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Eligibles_to_DB and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Eligibles pipeline run successfully",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Pass_status_update_Eligibles_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Eligibles_to_DB IS SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"Eligibles_to_DB completed sccessfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Delete Existing record from DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_data_upload_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "DELETE FROM HWAI_Eligibles where Month = (SELECT DATENAME(month,GETDATE())) and Year = (SELECT YEAR(GETDATE()));\nSELECT TOP 10 * FROM HWAI_Eligibles;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "HWAI_Eligibles"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_Eligibles"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Enr_all_monthly_refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Enr_all', 'Enr_all_script', (Select GETDATE()),'ASAY');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Enr_all_script",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enr_all_file/Enr_all_script"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for Enr_all script",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Enr_all_script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for ASAY script fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Enr_all_script",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for Enr_all script fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for ASAY script fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ASAY Script UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the ASAY Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String"
					},
					"db_name": {
						"type": "String"
					},
					"user_name": {
						"type": "String"
					},
					"password": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Monthly_Refresh/Enr_all_file"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Enr_golden_layer_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('enr_table', 'enr_file_prep', (Select GETDATE()),'enr_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "enr_table_run",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enr_table/Enr_table_creation_rectified"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "enr_run_pass_update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "enr_table_run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "enr_run_fail_update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "enr_table_run",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for enr script fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "enr_run_fail_update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"SCRIPT RUN FOR MONTHLY ENR FILE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr table Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "start time update_copy_enr_data",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "enr_run_pass_update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Crosswalk', 'Crosswalk_data_load_to_db', (Select GETDATE()),'Crosswalk');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Copy enr_data to enr_compiled",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existing record from DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Enrollment_table/Output/enr_table",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "enr_table_population",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "enrrollments_compiled",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "enrollmet_compiled_pass_update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy enr_data to enr_compiled",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "enrollments_compiled_failed_update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy enr_data to enr_compiled",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send update for successfull table population",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "enrollmet_compiled_pass_update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"SCRIPT RUN FOR MONTHLY ENR TABLE POPULATION SUCCEDED\",\n \"color\":\"GREEN\",\n \"message\":\"The table has been populated succesfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send update for error in table population",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "enrollments_compiled_failed_update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"SCRIPT RUN FOR MONTHLY ENR TABLE POPULATION FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr table Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Delete Existing record from DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_copy_enr_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "DELETE FROM HWAI_Enrollments where Month = (SELECT DATENAME(month,GETDATE())) and Year = (SELECT YEAR(GETDATE()));\nSELECT TOP 10 * FROM HWAI_Enrollments;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "HWAI_Eligibles"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Geography_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Geography_script",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start_time_update_geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Geography_Scripts/Geography_table"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_Geography_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Geography_details/Geography_details_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Geography_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Geography_table_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Start_time_update_geo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('Geo_script', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_update_geo",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Geography_script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_update_geo",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Geography_script",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Start_time_update_geoCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('Geo_copy', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_geoCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_Geography_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_geoCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_Geography_data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "send email update for geo script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR GEOGRAPHY UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Geography Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for geo Copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_geoCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR GEOGRAPHY UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Geography Copy to database and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Truncate_table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Start_time_update_geoCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table Geography_Table;\r\nselect TOP (10) [Geography_Id],[CountryId],[StateId],[CountyId] from Geography_Table;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "GeographyTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Pipelines/AEP_Refresh"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Market_snapshot')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('ASAY_Crosswalk_MS', 'ASAY_Crosswalk_MS', (Select GETDATE()),'Market_Snapshot');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "ASAY_Crosswalk_MS",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Market_Snapshot/ASAY_Crosswalk_Market_Snapshot"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for MS Script",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Market_Snapshot_final",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for MS script fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Market_Snapshot_final",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Copy MS data to Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate table MS Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Market_Snapshot/Output/MS_Final_Dataset",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Eghp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Organization_Marketing_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Marketing_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ma_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Key",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "key",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Qdwi",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_65_To_74_Years",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_65_To_74_Years",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_75_To_84_Years",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_75_To_84_Years",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_85_Years_And_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_85_Years_And_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_Above_65",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_Above_65",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_Above_65_Male",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_Above_65_Male",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_Above_65_Female",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_Above_65_Female",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_In_Households_Above_65",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_In_Households_Above_65",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Above_65_Has_A_Computer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Above_65_Has_A_Computer",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_Above_65_With_Employer-Based_Health_Insurance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_Above_65_With_Employer-Based_Health_Insurance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_Above_65_With_Employer-Based_Health_Insurance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_Above_65_With_Employer-Based_Health_Insurance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_Above_65_With_Medicare_Coverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_Above_65_With_Medicare_Coverage",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_Above_65_No_Medicare_Coverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_Above_65_No_Medicare_Coverage",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_Above_65_With_Medicare_Coverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_Above_65_With_Medicare_Coverage",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_Above_65_No_Medicare_Coverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_Above_65_No_Medicare_Coverage",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Male_65_To_74_Years",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Male_65_To_74_Years",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Male_75_Years_And_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Male_75_Years_And_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Female_65_To_74_Years",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Female_65_To_74_Years",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Female_75_Years_And_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Female_75_Years_And_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_65_To_74_Years_With_A_Disability",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_65_To_74_Years_With_A_Disability",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_75_Years_And_Over_With_A_Disability",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_75_Years_And_Over_With_A_Disability",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_65_To_74_Years_With_A_Disability",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_65_To_74_Years_With_A_Disability",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_75_Years_And_Over_With_A_Disability",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_75_Years_And_Over_With_A_Disability",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Household_Received_Snap_In_The_Past_12_Months_At_Least_One_Person_In_Household_60_Years_Or_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Household_Received_Snap_In_The_Past_12_Months_At_Least_One_Person_In_Household_60_Years_Or_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Not_Received_Snap_In_The_Past_12_Months_At_Least_One_Person_In_Household_60_Years_Or_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Not_Received_Snap_In_The_Past_12_Months_At_Least_One_Person_In_Household_60_Years_Or_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Above_65_Literate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Above_65_Literate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "D-SNP Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "D-SNP Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Out of Area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Out of Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Termination Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Termination Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Crosswalk",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "ms_allstatesallyears"
								}
							}
						]
					},
					{
						"name": "start time update_copy_MS_data",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for MS Script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Market_Snapshot', 'MS_data_load_to_db', (Select GETDATE()),'Market_Snapshot');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for MS_data_load_to_db",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy MS data to Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for MS_data_load to db fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy MS data to Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update forMarket snapshot script fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for MS script fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR MS Update Script UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the MS Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for MS data load fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for MS_data_load to db fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR MS data load FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the MS Data Load and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for Market_Snapshot pipeline success",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for MS_data_load_to_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Market Snapshot data refresh SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"Check the QC Output\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Market_Snapshot_final",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Crosswalk_after_ghost_inclusion",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Market_Snapshot/Market_Snapshot_final"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ghost_Plan_removal",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ASAY_Crosswalk_MS",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Market_Snapshot/Ghost_Plans_removal"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ASAY_Ghost_Plan",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Ghost_Plan_removal",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Market_Snapshot/Ghost_Plan_ASAY"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Crosswalk_after_ghost_inclusion",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ASAY_Ghost_Plan",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Market_Snapshot/Crosswalk_final_after_ghost_inclusion"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate table MS Data",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_copy_MS_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table ms_allstatesallyears;\nSelect Top 10 * from ms_allstatesallyears;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "ms_allstatesallyears"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "HWai_Dashboards"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_Market_Snapshot"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Org_Plan_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Org_Plan_script",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Extra_tables_scripts/Org_Plan_Script"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_Plan_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_final/org_plan_data",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Org_Plans_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Org_Plan_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('Org_Plan_script', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_update_plan",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Org_Plan_script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_update_plan",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Org_Plan_script",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Start_time_update_planCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_plan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('plan_copy', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_planCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_GeographyID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_planCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_Plan_data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "send email update for plan script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_plan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Plan UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the org plan Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for plan Copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_planCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR PLAN UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Org Plan Copy to database and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Update_GeographyID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_Plan_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update [dbo].[OrgPlans] Set GeographyPlanFilterID = (\n        SELECT Plan_Id\n        FROM [dbo].[Plan_Table]\n        WHERE Plan_Table.BidId = OrgPlans.BidId and Plan_Table.StateId = OrgPlans.StateId and Plan_Table.CountyId = OrgPlans.CountyId);\nUpdate [dbo].[OrgPlans] set MOOP = '' where MOOP = 999999;\nUpdate [dbo].[OrgPlans] set AnnualDrugDeductible = '' where AnnualDrugDeductible = 999999;\nselect distinct BidId from [dbo].[OrgPlans];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_table_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate_table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Start_time_update_planCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table [dbo].[OrgPlans];\nselect * from [dbo].[OrgPlans];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Org_Plan_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Pipelines/AEP_Refresh"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Org_ben_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Org_ben_data_Crosswalk",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Crosswalk_Plan_Features",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Benefit_Scripts/Crosswalk_Benefits"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_ben_data_latest_yr",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Combined_Benefit/org_final_ben_curr_yr",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ben_data_latest_yr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OrgBenefit",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Start_time_update_benCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "send email update for geo script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_benefits(FileName, Operation, StartTime)\nValues('All_benefits', 'ben_copy', (Select GETDATE()));\nSelect * from Audit_benefits;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Audit_benefits_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_benCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_ben_data_oldest_yr",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "DECLARE @file as NVARCHAR(MAX)\nset @file = 'All_benefits';\n\nUpdate Audit_benefits\nset EndTime = (Select GETDATE())\nwhere Id = (select Max(Id) from Audit_benefits \nwhere (CONVERT(VARCHAR, FileName)= @file and Operation = 'ben_copy'));\n\nUpdate Audit_benefits\nSET Status = 'pass'\nwhere Id = (select Max(Id) from Audit_benefits \nwhere (CONVERT(VARCHAR, FileName)= @file and Operation = 'ben_copy'));\n\nUpdate Audit_benefits\nset Timetaken = EndTime-StartTime\nwhere Id = (select Max(Id) from Audit_benefits \nwhere (CONVERT(VARCHAR, FileName)= @file and Operation = 'ben_copy'));\n\n\nSelect * from Audit_benefits;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Audit_benefits_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_benCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_ben_data_oldest_yr",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "DECLARE @file as NVARCHAR(MAX)\nset @file = 'All_benefits';\n\nUpdate Audit_benefits\nset EndTime = (Select GETDATE())\nwhere Id = (select Max(Id) from Audit_benefits \nwhere (CONVERT(VARCHAR, FileName)= @file and Operation = 'ben_copy'));\n\nUpdate Audit_benefits\nSET Status = 'Failed'\nwhere Id = (select Max(Id) from Audit_benefits \nwhere (CONVERT(VARCHAR, FileName)= @file and Operation = 'ben_copy'));\n\nUpdate Audit_benefits\nset Timetaken = EndTime-StartTime\nwhere Id = (select Max(Id) from Audit_benefits \nwhere (CONVERT(VARCHAR, FileName)= @file and Operation = 'ben_copy'));\n\n\nSelect * from Audit_benefits;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Audit_benefits_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "send email update for geo script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Org_ben_data_Crosswalk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR GEOGRAPHY UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the State_County_org Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for ben Copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_benCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR GEOGRAPHY UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the benefit Copy to database and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Truncate_table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Start_time_update_benCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table OrgBenefits;\nselect * from OrgBenefits;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "OrgBenefit",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Crosswalk_Plan_Features",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Benefit_Scripts/Crosswalk_plan_features"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_ben_data_prev_yrs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_ben_data_latest_yr",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Combined_Benefit/org_final_ben_prev_yr",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ben_data_prev_yrs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OrgBenefit",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_ben_data_oldest_yr",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_ben_data_prev_yrs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Combined_Benefit/org_final_ben_oldest_yr",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ben_data_oldest_yr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OrgBenefit",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Pipelines/AEP_Refresh"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parent_org_validation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as value from [dbo].[parent_organization]\nwhere Case_value is null;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Parent_org_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/cpsc and hwai plan details"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookup1').output.value[0]['value'],0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set variable2",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Y",
										"value": "proceed"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "send email update for Parent Oraganization",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\n \"title\":\"Pipeline run for Parent organization\",\n \"color\":\"GREEN\",\n \"message\":\"Update the values in cpsc contract file and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"z": {
						"type": "String"
					},
					"X": {
						"type": "String"
					},
					"Y": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Plan_Finder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Plan_Finder', 'PF_Data_prep', (Select GETDATE()),'Plan_Finder');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "PF_enrollment_refresh",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Plan_Finder/Enrollment_data"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for Pf_enrollment_file_processing",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PF_enrollment_refresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for Pf_enrollment fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PF_enrollment_refresh",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Copy Pf_enrollment to Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "start time update_copy_PF_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Plan_Finder/Output/Enrollment_final_data",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PF_Enrollment",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "OrgEnrollment"
								}
							}
						]
					},
					{
						"name": "start time update_copy_PF_data",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for Pf_enrollment_file_processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Crosswalk', 'Crosswalk_data_load_to_db', (Select GETDATE()),'Crosswalk');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for PF_load_to_db",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Pf_enrollment to Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for PF load to db fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy Pf_enrollment to Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for Pf_enrollment script fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for Pf_enrollment fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Pf_enrollment Update Script UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Pf_enrollment Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for PF data load fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for PF load to db fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR PF data load FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Crosswalk Data Load and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for PF pipeline success",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for PF_load_to_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Pf_enrollment data SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"Check the QC Output\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "teghws.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "hwai_production_db"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "hwstegadmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_Plan_Finder"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Plan_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Plan_script",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "PLan details part1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Geography_Scripts/Plan_table"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_Plan_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Plan_details/Plan_details_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Plan_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Plan_table_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('Plan_script', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_update_plan",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Plan_script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_update_plan",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Plan_script",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Start_time_update_planCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_plan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('plan_copy', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_planCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_GeographyID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_planCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_Plan_data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "send email update for plan script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_plan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Plan UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the plan Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for plan Copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_planCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR PLAN UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Plan Copy to database and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Update_GeographyID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_Plan_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  Update [dbo].[Plan_Table] Set Geography_Id = (\n        SELECT Geography_Id\n        FROM [dbo].[Geography_Table]\n        WHERE Geography_Table.StateId = Plan_Table.StateId and Geography_Table.CountyId = Plan_Table.CountyId);\n  select distinct Geography_Id from [dbo].[Plan_Table];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_table_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "PLan details part1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Geography_Scripts/Plan_details_part1"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate_table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Start_time_update_planCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table [dbo].[Plan_Table];\nselect * from [dbo].[Plan_Table];",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_table_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Pipelines/AEP_Refresh"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Plan_details_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start_time_Audit_Update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan_details_new(Operation, StartTime)\nValues('Execution', (Select GETDATE()));\nSelect * from Audit_plan_details_new;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Plan_details_part1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start_time_Audit_Update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_details_part1"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Plan_details_final",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Plan_details_part1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan details"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_time_audit_update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Geo_plan_filter_col_update",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "copy_plan_comparision_final_to_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan_details_new\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan_details_new);\n\nUpdate Audit_plan_details_new\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan_details_new);\n\nUpdate Audit_plan_details_new\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan_details_new);\n\nSelect * from Audit_plan_details_new;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Geo_plan_filter_col_update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Geo_plan_filters_col_add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "UPDATE GeographyPlanFiltersCopy\nSET HFProductCutsId = (\nSELECT HFProductCutsId\nFROM Client_specific_data\nWHERE Client_specific_data.StateId = GeographyPlanFiltersCopy.StateId and Client_specific_data.BidId = GeographyPlanFiltersCopy.BidId \nand Client_specific_data.CountyId = GeographyPlanFiltersCopy.CountyId\n);\n\nUPDATE GeographyPlanFiltersCopy\nSET SnpTagId = (\nSELECT SnpTagId\nFROM Client_specific_data\nWHERE Client_specific_data.StateId = GeographyPlanFiltersCopy.StateId and Client_specific_data.BidId = GeographyPlanFiltersCopy.BidId \nand Client_specific_data.CountyId = GeographyPlanFiltersCopy.CountyId\n);\n\nSelect * from GeographyPlanFiltersCopy;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "geography_plan_filters_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_geo_plan_filters_to_db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Plan_details_final",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Geography_plan_filters/Geography_plan_filters_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Geography_plan_filters_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "geography_plan_filters_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copy_plan_comparision_final_to_db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Plan_details_final",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Org_Plans/Plan_comparision_table_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StateId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StateId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CountyId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CountyId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BidId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BidId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RichPlans",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RichPlans",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "LeanPlans",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LeanPlans",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "WinningPlans",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WinningPlans",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PlanName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PlanName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PremiumCD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PremiumCD",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PartD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PartBGiveBack",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartBGiveBack",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PlanCoverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PlanCoverage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbWorldWideEmegency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbWorldWideEmegency",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbHearing",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbHearing",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HealthDeductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HealthDeductible",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "AnnualDrugDeductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AnnualDrugDeductible",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "MOOP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MOOP",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SbVision",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbVision",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TEGPlanValue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TEGPlanValue",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "OOPC",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OOPC",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PCP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PCP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Specalist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Specalist",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "InpatAcute",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InpatAcute",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbInpatient",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbInpatient",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OCTCoverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OCTCoverage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbOTC",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbOTC",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbCompDental",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbCompDental",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CompDentalCoverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompDentalCoverage",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbChiropractor",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbChiropractor",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SbMeal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbMeal",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SbFitness",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbFitness",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmergencyCare",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmergencyCare",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OpHospital",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OpHospital",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbTeleHealth",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbTeleHealth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbHomeSupport",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbHomeSupport",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbHomeSafety",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbHomeSafety",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SBPers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SBPers",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SbAmbulance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SbAmbulance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OverallStarRating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OverallStarRating",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Plan_comparision_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Plan_comparision_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Geo_plan_filters_col_add",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "copy_geo_plan_filters_to_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Alter table GeographyPlanFiltersCopy\nadd HFProductCutsId int,SnpTagId int;\nSelect Top(1) from GeographyPlanFiltersCopy;\nSelect * from GeographyPlanFiltersCopy;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "geography_plan_filters_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Unused_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Product_Insight')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Product_Insight', 'Product_Insight_prep', (Select GETDATE()),'Product_Insight_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Product_Insight_script",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Product_Insight/Product_Insight_script"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Pass_status_update_Product_Insight",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Product_Insight_script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_Product_Insight",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Product_Insight_script",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for Product_Insight script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_Product_Insight",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Product_Insight_script FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Product_Insight_script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy pi_pivot to Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existing record from pi_landscape_pivot",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "hwaicontainer/Product_Insights/Output/pi_lscape_pivot/p*"
							},
							{
								"name": "Destination",
								"value": "dbo.@{'pi_pivot'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Product_Insights/Output/pi_lscape_pivot",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "bid_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bid_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CP_ID_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CP_ID_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CP_ID_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CP_ID_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CP_ID_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CP_ID_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CP_ID_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CP_ID_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "statecode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "statecode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Segment_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "plan_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Drug_Benefit_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Drug_Benefit_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Add_Cvrg_Offrd_in_Gap",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Add_Cvrg_Offrd_in_Gap",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Drug_Benefit_Type_Detail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Drug_Benefit_Type_Detail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "In_network_MOOP_Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "In_network_MOOP_Amount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Overall_Star_Rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Overall_Star_Rating",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MMP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MMP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "plan_type_p",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_type_p",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Basic_Prm_Blw_Rgnl_bnchmrk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Basic_Prm_Blw_Rgnl_bnchmrk",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "partc_premium2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "partc_premium2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Basic_Premium3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Basic_Premium3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Supplemental_Premium4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Supplemental_Premium4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Total_Premium5",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Total_Premium5",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Prm_oblgtn_Full_prm_assist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Prm_oblgtn_Full_prm_assist",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Prm_oblgtn_75_prm_assist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Prm_oblgtn_75_prm_assist",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Prm_oblgtn_50_prm_assist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Prm_oblgtn_50_prm_assist",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Prm_oblgtn_25_prm_assist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Prm_oblgtn_25_prm_assist",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Drug_Deductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Drug_Deductible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "key_segment2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "key_segment2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "star_rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "star_rating",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "parent_organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "parent_organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Premium_C_new",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Premium_C_new",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Premium_D_new",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Premium_D_new",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SNP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "health_deductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "health_deductible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual_Drug_Deductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_Drug_Deductible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enr_latest",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enr_latest",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pivot_Field_Names",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pivot_Field_Names",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pivot_Field_Values",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pivot_Field_Values",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "pi_pivot",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "pi_pivot"
								}
							}
						]
					},
					{
						"name": "start time update_data_upload_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_Product_Insight",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Product_Insight_script', 'Product_Insight_upload_DB', (Select GETDATE()),'Product_Insight_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Pass_status_update_pi_pivot_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy pi_pivot to Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_pi_pivot_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy pi_pivot to Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for fail pi_pivot to DB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_pi_pivot_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR pi_pivot_to_DB FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the pi_pivot_to_DB and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pi_pivot pipeline run successfully",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Pass_status_update_pi_pivot_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR pi_pivot_to_DB IS SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"pi_pivot_to_DB completed sccessfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Delete Existing record from pi_landscape_pivot",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_data_upload_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "TRUNCATE table pi_pivot;\nSELECT TOP 10 * FROM pi_pivot;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "pi_pivot"
								}
							}
						}
					},
					{
						"name": "Delete Existing record from pi_trends",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_data_upload_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table pi_trends;\nSELECT TOP 10 * FROM pi_trends;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "pi_trends"
								}
							}
						}
					},
					{
						"name": "Copy pi_trends to Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existing record from pi_trends",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "hwaicontainer/Product_Insights/Output/pi_trends/p*"
							},
							{
								"name": "Destination",
								"value": "dbo.@{'pi_trends'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Product_Insights/Output/pi_trends",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "bid_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bid_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "key_segment2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "key_segment2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CP_ID_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CP_ID_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "statecode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "statecode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "plan_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "plan_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "parent_organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "parent_organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SNP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "cp_id_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cp_id_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "cp_id_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cp_id_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "cp_id_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cp_id_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "contract_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "contract_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "plan_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "segment_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "segment_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual_drug_deductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_drug_deductible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Overall_Star_Rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Overall_Star_Rating",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "partc_premium2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "partc_premium2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Total_Premium5",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Total_Premium5",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "star_rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "star_rating",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Premium_C_new",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Premium_C_new",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Premium_D_new",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Premium_D_new",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "In_network_MOOP_Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "In_network_MOOP_Amount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enr_latest",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enr_latest",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "pi_trends",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "pi_trends"
								}
							}
						]
					},
					{
						"name": "Copy to pi_landscape Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existing record from pi_landscape",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "hwaicontainer/Product_Insights / Output / pi_lscape/p*"
							},
							{
								"name": "Destination",
								"value": "dbo.@{'pi_landscape'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Product_Insights/Output/pi_lscape",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "bid_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bid_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CP_ID_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CP_ID_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CP_ID_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CP_ID_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CP_ID_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CP_ID_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CP_ID_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CP_ID_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "statecode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "statecode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Segment_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "plan_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Drug_Benefit_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Drug_Benefit_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Add_Cvrg_Offrd_in_Gap",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Add_Cvrg_Offrd_in_Gap",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Drug_Benefit_Type_Detail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Drug_Benefit_Type_Detail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "In_network_MOOP_Amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "In_network_MOOP_Amount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Overall_Star_Rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Overall_Star_Rating",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MMP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MMP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "plan_type_p",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "plan_type_p",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Basic_Prm_Blw_Rgnl_bnchmrk",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Basic_Prm_Blw_Rgnl_bnchmrk",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "partc_premium2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "partc_premium2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Basic_Premium3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Basic_Premium3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Supplemental_Premium4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Supplemental_Premium4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Total_Premium5",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Total_Premium5",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Prm_oblgtn_Full_prm_assist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Prm_oblgtn_Full_prm_assist",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Prm_oblgtn_75_prm_assist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Prm_oblgtn_75_prm_assist",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Prm_oblgtn_50_prm_assist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Prm_oblgtn_50_prm_assist",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Prm_oblgtn_25_prm_assist",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Prm_oblgtn_25_prm_assist",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_Drug_Deductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_Drug_Deductible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "key_segment2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "key_segment2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "star_rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "star_rating",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "parent_organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "parent_organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Premium_C_new",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Premium_C_new",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Premium_D_new",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Premium_D_new",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SNP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Hospital_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Hospital_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Snf_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Snf_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cardiac_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emergency_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emergency_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chiropractor_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chiropractor_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Podiatry_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Podiatry_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Telehealth_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Telehealth_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Blood_Services_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Blood_Services_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transportation_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transportation_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Accupuncture_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accupuncture_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Over_the_Counter_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Over_the_Counter_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Meal_Services_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Meal_Services_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual_Physical_Exam_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_Physical_Exam_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pre_Dental_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pre_Dental_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Comp_Dental_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comp_Dental_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Exam_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Exam_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Wear_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Wear_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hear_Exam_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hear_Exam_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hear_Aid_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hear_Aid_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Giveback_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Giveback_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Alternative_Therapy_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Alternative_Therapy_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERS_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PERS_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "flag_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "flag_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_Number_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_Number_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Segment_ID_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment_ID_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Organization_Marketing_Name_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Marketing_Name_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan Name_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan Name_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Benefit_Year_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Benefit_Year_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Hospital_Acute_Care_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Hospital_Acute_Care_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Mental_Health_Care_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Mental_Health_Care_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Skilled_Nursing_Facility_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Skilled_Nursing_Facility_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cardiac_Rehabilitation_Services_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac_Rehabilitation_Services_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pulmonary_Rehab_Services_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pulmonary_Rehab_Services_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emergency_Care_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emergency_Care_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Urgently_Needed_Care_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Urgently_Needed_Care_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Home_Health_Agency_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Home_Health_Agency_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_Care_Physician_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_Care_Physician_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chiropractic_Services_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chiropractic_Services_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Occupational_Therapy_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Occupational_Therapy_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Physician_Specialists_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Physician_Specialists_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Mental_Health_Care_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Mental_Health_Care_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Podiatry_Services_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Podiatry_Services_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other_Health_Professionals_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other_Health_Professionals_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Psychiatric_Care_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Psychiatric_Care_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Physical_and_Speech_Therapy_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Physical_and_Speech_Therapy_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Lab_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Lab_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diagnostic_Tests_and_Procedures_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic_Tests_and_Procedures_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Therapeutic_Radiation_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Therapeutic_Radiation_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_X_Rays_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_X_Rays_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diagnostic_Radiological_Services_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic_Radiological_Services_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Hospital_Services_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Hospital_Services_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ambulatory_Surgical_Center_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ambulatory_Surgical_Center_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chemotherapy_Drugs_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chemotherapy_Drugs_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ambulance_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ambulance_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Durable_Medical_Equipment_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Durable_Medical_Equipment_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Prosthetic_Devices_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Prosthetic_Devices_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Renal_Dialysis_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Renal_Dialysis_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes_Education_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diabetes_Education_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Medicare_Covered_Part_B_Drugs_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Medicare_Covered_Part_B_Drugs_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Preventative_Dental_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Preventative_Dental_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Comprehensive_Dental_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comprehensive_Dental_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Exams_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Exams_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hearing_Exams_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hearing_Exams_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Opioid_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Opioid_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Total_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Grand_Total_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Grand_Total_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PBP_Version_Date_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PBP_Version_Date_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Organization_Marketing_Name_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Marketing_Name_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan Name_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan Name_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Benefit_Year_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Benefit_Year_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Hospital_Acute_Care_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Hospital_Acute_Care_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Mental_Health_Care_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Mental_Health_Care_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Skilled_Nursing_Facility_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Skilled_Nursing_Facility_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cardiac_Rehabilitation_Services_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac_Rehabilitation_Services_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pulmonary_Rehab_Services_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pulmonary_Rehab_Services_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emergency_Care_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emergency_Care_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Urgently_Needed_Care_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Urgently_Needed_Care_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Home_Health_Agency_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Home_Health_Agency_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_Care_Physician_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_Care_Physician_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chiropractic_Services_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chiropractic_Services_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Occupational_Therapy_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Occupational_Therapy_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Physician_Specialists_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Physician_Specialists_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Mental_Health_Care_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Mental_Health_Care_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Podiatry_Services_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Podiatry_Services_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other_Health_Professionals_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other_Health_Professionals_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Psychiatric_Care_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Psychiatric_Care_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Physical_and_Speech_Therapy_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Physical_and_Speech_Therapy_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Lab_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Lab_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diagnostic_Tests_and_Procedures_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic_Tests_and_Procedures_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Therapeutic_Radiation_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Therapeutic_Radiation_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_X_Rays_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_X_Rays_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diagnostic_Radiological_Services_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic_Radiological_Services_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Hospital_Services_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Hospital_Services_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ambulatory_Surgical_Center_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ambulatory_Surgical_Center_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chemotherapy_Drugs_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chemotherapy_Drugs_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ambulance_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ambulance_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Durable_Medical_Equipment_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Durable_Medical_Equipment_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Prosthetic_Devices_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Prosthetic_Devices_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Renal_Dialysis_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Renal_Dialysis_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes_Education_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diabetes_Education_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Medicare_Covered_Part_B_Drugs_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Medicare_Covered_Part_B_Drugs_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Preventative_Dental_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Preventative_Dental_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Comprehensive_Dental_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comprehensive_Dental_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Exams_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Exams_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hearing_Exams_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hearing_Exams_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Opioid_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Opioid_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Total_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Grand_Total_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Grand_Total_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PBP_Version_Date_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PBP_Version_Date_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_Number_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_Number_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Segment_ID_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment_ID_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Organization_Marketing_Name_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Marketing_Name_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Benefit_Year_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Benefit_Year_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Hospital_Acute_Care_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Hospital_Acute_Care_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Mental_Health_Care_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Mental_Health_Care_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Skilled_Nursing_Facility_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Skilled_Nursing_Facility_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cardiac_Rehabilitation_Services_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac_Rehabilitation_Services_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pulmonary_Rehab_Services_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pulmonary_Rehab_Services_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emergency_Care_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emergency_Care_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Urgently_Needed_Care_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Urgently_Needed_Care_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Home_Health_Agency_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Home_Health_Agency_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_Care_Physician_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_Care_Physician_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chiropractic_Services_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chiropractic_Services_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Occupational_Therapy_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Occupational_Therapy_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Physician_Specialists_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Physician_Specialists_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Mental_Health_Care_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Mental_Health_Care_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Podiatry_Services_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Podiatry_Services_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other_Health_Professionals_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other_Health_Professionals_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Psychiatric_Care_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Psychiatric_Care_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Physical_and_Speech_Therapy_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Physical_and_Speech_Therapy_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Lab_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Lab_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diagnostic_Tests_and_Procedures_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic_Tests_and_Procedures_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Therapeutic_Radiation_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Therapeutic_Radiation_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_X_Rays_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_X_Rays_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diagnostic_Radiological_Services_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic_Radiological_Services_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Hospital_Services_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Hospital_Services_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ambulatory_Surgical_Center_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ambulatory_Surgical_Center_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chemotherapy_Drugs_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chemotherapy_Drugs_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ambulance_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ambulance_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Durable_Medical_Equipment_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Durable_Medical_Equipment_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Prosthetic_Devices_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Prosthetic_Devices_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Renal_Dialysis_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Renal_Dialysis_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes_Education_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diabetes_Education_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Medicare_Covered_Part_B_Drugs_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Medicare_Covered_Part_B_Drugs_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Preventative_Dental_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Preventative_Dental_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Comprehensive_Dental_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comprehensive_Dental_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Exams_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Exams_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hearing_Exams_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hearing_Exams_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Opioid_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Opioid_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Total_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Grand_Total_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Grand_Total_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PBP_Version_Date_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PBP_Version_Date_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Contract_Number_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_Number_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Segment_ID_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment_ID_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Organization_Marketing_Name_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Marketing_Name_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Benefit_Year_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Benefit_Year_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Hospital_Acute_Care_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Hospital_Acute_Care_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Mental_Health_Care_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Mental_Health_Care_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Skilled_Nursing_Facility_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Skilled_Nursing_Facility_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cardiac_Rehabilitation_Services_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac_Rehabilitation_Services_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pulmonary_Rehab_Services_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pulmonary_Rehab_Services_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emergency_Care_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emergency_Care_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Urgently_Needed_Care_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Urgently_Needed_Care_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Home_Health_Agency_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Home_Health_Agency_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Primary_Care_Physician_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_Care_Physician_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chiropractic_Services_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chiropractic_Services_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Occupational_Therapy_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Occupational_Therapy_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Physician_Specialists_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Physician_Specialists_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Mental_Health_Care_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Mental_Health_Care_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Podiatry_Services_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Podiatry_Services_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other_Health_Professionals_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other_Health_Professionals_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Psychiatric_Care_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Psychiatric_Care_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Physical_and_Speech_Therapy_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Physical_and_Speech_Therapy_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Lab_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Lab_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diagnostic_Tests_and_Procedures_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic_Tests_and_Procedures_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Therapeutic_Radiation_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Therapeutic_Radiation_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_X_Rays_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_X_Rays_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diagnostic_Radiological_Services_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diagnostic_Radiological_Services_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Hospital_Services_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Hospital_Services_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ambulatory_Surgical_Center_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ambulatory_Surgical_Center_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chemotherapy_Drugs_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chemotherapy_Drugs_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ambulance_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ambulance_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Durable_Medical_Equipment_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Durable_Medical_Equipment_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Prosthetic_Devices_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Prosthetic_Devices_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Renal_Dialysis_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Renal_Dialysis_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Diabetes_Education_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Diabetes_Education_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Medicare_Covered_Part_B_Drugs_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Medicare_Covered_Part_B_Drugs_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Preventative_Dental_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Preventative_Dental_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Comprehensive_Dental_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comprehensive_Dental_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Exams_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Exams_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hearing_Exams_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hearing_Exams_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Opioid_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Opioid_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Total_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PartD_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PartD_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Grand_Total_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Grand_Total_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PBP_Version_Date_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PBP_Version_Date_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "health_deductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "health_deductible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual_Drug_Deductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_Drug_Deductible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PDSS_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PDSS_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enr_latest",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enr_latest",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enr_latest_prev_yr",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enr_latest_prev_yr",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "pi_lsacpe",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "pi_landscape"
								}
							}
						]
					},
					{
						"name": "Delete Existing record from pi_landscape",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_data_upload_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table pi_landscape;\nSELECT TOP 10 * FROM pi_landscape;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "pi_landscape"
								}
							}
						}
					},
					{
						"name": "Pass_status_update_pi_lsacpe_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy to pi_landscape Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Pass_status_update_pi_trends_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy pi_trends to Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_pi_trends_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy pi_trends to Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_pi_lsacpe_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy to pi_landscape Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pi_lsacpe pipeline run successfully",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Pass_status_update_pi_lsacpe_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR pi_lsacpe_to_DB IS SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"pi_lsacpe_to_DB completed sccessfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pi_trends pipeline run successfully",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Pass_status_update_pi_trends_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR pi_trends_to_DB IS SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"pi_trends_to_DB completed sccessfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for fail pi_trends to DB_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_pi_trends_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR pi_trends_to_DB FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the pi_trends_to_DB and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for fail pi_lsacpe to DB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_pi_lsacpe_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR pi_lsacpe_to_DB FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the pi_lsacpe_to_DB and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_product_insight"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Push_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Push_Csv_To_SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stability_Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stability_Index",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Prediction",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Prediction",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsTerminated",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsTerminated",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsOutofArea",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsOutofArea",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsStarEnr",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IsStarEnr",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ASAY_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ET_TECH_STACK",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/QC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Plan_details_QC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Audit_QC_Start_time_Update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_details_QC"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Geography_filters_QC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Plan_details_QC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Geography_filters_QC"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Audit_QC_Start_time_Update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_QC(Operation, StartTime)\nValues('Execution', (Select GETDATE()));\nSelect * from Audit_QC;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Audit_QC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Audit_QC_End_time_Update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_Geo_filters_QC_to_db",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_Plan_details_QC_to_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_QC\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_QC);\n\nUpdate Audit_QC\nSET Status = 'Pass'\nwhere Id = (select Count(*) from Audit_QC);\n\nUpdate Audit_QC\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_QC);\n\nSelect * from Audit_QC;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Audit_QC",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy_Plan_details_QC_to_db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Plan_details_QC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "QC/Summary_Plan_details_QC",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Plan_details_QC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Summary_QC",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_Geo_filters_QC_to_db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Geography_filters_QC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "QC/Summary_Geo_filters_QC",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Geo_Filters_QC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Summary_QC",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Unused_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/QC_dummy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select Test_Script_type,Test_Script_location from QC_files_table;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "QC_dummy_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(if(equals(item().Test_Script_type,'1'), True,False))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Python1",
												"type": "DatabricksSparkPython",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pythonFile": {
														"value": "@item().Test_Script_location",
														"type": "Expression"
													},
													"parameters": []
												},
												"linkedServiceName": {
													"referenceName": "AzureDatabricks4_pfcluster3",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Lookup2",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Python1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "insert into QC_dummy_output(Output)\nvalues(@activity('Python1').output);",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "QC_dummy_output",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/QC_dummy"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Unused_Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SNP_Eligibles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('SNP Eligibles', 'SNP Eligibles_prep', (Select GETDATE()),'SNP Eligibles_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "SNP Eligibles",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Eligibles/SNP Eligibles"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Pass_status_update_SNP Eligibles",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SNP Eligibles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_SNP Eligibles",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SNP Eligibles",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for SNP Eligibles script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_SNP Eligibles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR SNP Eligibles_script FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the SNP Eligibles_script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "start time update_data_upload_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_SNP Eligibles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('SNP Eligibles_script', 'SNP Eligibles_upload_DB', (Select GETDATE()),'SNP\nEligibles_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Copy SNP Eligibles to Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existing record from DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Eligibles / Output / DSNP_Eligible",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SNPEligibles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "SNP_Eligibles"
								}
							}
						]
					},
					{
						"name": "Pass_status_update_SNP Eligibles to DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy SNP Eligibles to Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_SNP Eligibles to DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy SNP Eligibles to Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "SNP Eligibles pipeline run successfully",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Pass_status_update_SNP Eligibles to DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR SNP Eligibles_to_DB IS SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"SNP Eligibles_to_DB completed sccessfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for fail SNP Eligibles to DB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_SNP Eligibles to DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR SNP Eligibles_to_DB FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the SNP Eligibles_to_DB and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Delete Existing record from DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_data_upload_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "DELETE FROM SNP_Eligibles where Month = (SELECT DATENAME(month,GETDATE())) and Year = (SELECT YEAR(GETDATE()));\nSELECT TOP 10 * FROM SNP_Eligibles;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "SNP Eligibles"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_Eligibles"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/State_County_Org')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "State_Counrt_Org_Script",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start_time_update_geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Geography_Scripts/State_County_Org_Id"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_State_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Id_Mappings/State_details_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "State_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "State_table_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Start_time_update_geo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('GeoIds_script', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_update_geo",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "State_Counrt_Org_Script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_update_geo",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "State_Counrt_Org_Script",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Start_time_update_geoCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('GeoIds_copy', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_geoIdCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_ParentOrgData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_geoidCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_ParentOrgData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "send email update for geo script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR GEOGRAPHY UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the State_County_org Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for geo Id Copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_geoidCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR GEOGRAPHY UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Geography ID Copy to database and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Truncate_table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Start_time_update_geoCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table OrgState;\nselect * from OrgState;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "OrgState",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy_County_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_table_parent_org",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Id_Mappings/County_details_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "County_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "County_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_ParentOrgData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_County_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Id_Mappings/ParentOrg_details_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parent_Org_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parent_org_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate_table_county",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_State_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table OrgCounty;\nselect * from OrgCounty;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "County_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate_table_parent_org",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate_table_county",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table OrgParentOrganization;\nselect * from OrgParentOrganization;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Parent_org_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Pipelines/AEP_Refresh"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/User_log_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "User_Info_Update_on_Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserId"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UserId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ClientId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SessionId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SessionId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsLoggedIn",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IsLoggedIn",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HealthWorksPlan_SQL_Analytics",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "User_table_Azure_prod",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WinningPlans')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('WinningPlans_Script', 'WinningPlansScript_prep', (Select GETDATE()),'WinningPlans');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Winning_Plans",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Winning_Plans/Winning_Plans"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Pass_status_update_WinningPlans",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Winning_Plans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_WinningPlans",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Winning_Plans",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "start time update_data_upload_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_WinningPlans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('WinningPlans_Script', 'WinningPlans_upload_DB', (Select GETDATE()),'WinningPlans_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for Eligibles script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_WinningPlans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR WinningPlans_Script FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the WinningPlans_Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Delete Existing record from DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_data_upload_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table WinningPlans;\nSELECT TOP 10 * FROM WinningPlans;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "WinningPlans"
								}
							}
						}
					},
					{
						"name": "Copy WinningPlans to Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existing record from DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "hwaicontainer/WinningPlans/Output/enr_final2.csv"
							},
							{
								"name": "Destination",
								"value": "dbo.@{'WinningPlans'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": "2023-03-07T00:00:00.000Z",
									"wildcardFolderPath": "WinningPlans/Output",
									"wildcardFileName": "enr_final2.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Statecode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Statecode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bid_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bid_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Key_Segment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Segment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual_Drug_Deductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_Drug_Deductible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Deductible_Health",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Deductible_Health",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MOOP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MOOP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Star_rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Star_rating",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient Hospital-Acute Copay Tier 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient Hospital-Acute Copay Tier 1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SNF MC stay Tier1 Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNF MC stay Tier1 Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cardiac and Pulmonary Rehabilitation Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac and Pulmonary Rehabilitation Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emergency Care Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emergency Care Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transport Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transport Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OTC Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OTC Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OTC Max Coverage Amt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OTC Max Coverage Amt",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Meal Benefit Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Meal Benefit Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Preventive Dental Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Preventive Dental Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Comprehensive Dental Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comprehensive Dental Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye Exams Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye Exams Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eyewear Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eyewear Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hearing Aids Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hearing Aids Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hearing Exams Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hearing Exams Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chiropractic Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chiropractic Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Podiatry Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Podiatry Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Acupuncture Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Acupuncture Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual Physical Exam Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual Physical Exam Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient Blood Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient Blood Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Alternative Therapy Coins/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Alternative Therapy Coins/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERS Coins/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PERS Coins/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Grand_Total",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Grand_Total",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Hospital_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Hospital_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Snf_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Snf_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cardiac_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emergency_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emergency_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chiropractor_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chiropractor_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Podiatry_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Podiatry_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Blood_Services_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Blood_Services_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transportation_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transportation_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Accupuncture_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accupuncture_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Over_the_Counter_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Over_the_Counter_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Meal_Services_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Meal_Services_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual_Physical_Exam_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_Physical_Exam_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pre_Dental_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pre_Dental_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Comp_Dental_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comp_Dental_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Exam_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Exam_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Wear_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Wear_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hear_Exam_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hear_Exam_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hear_Aid_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hear_Aid_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Giveback_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Giveback_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Alternative_Therapy_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Alternative_Therapy_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERS_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PERS_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PDSS_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PDSS_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "pbp_d_mco_pay_reduct_amt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pbp_d_mco_pay_reduct_amt",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WinningPlans",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "WinningPlans"
								}
							}
						]
					},
					{
						"name": "Pass_status_update_WinningPlans_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy WinningPlans to Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_WinningPlans_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy WinningPlans to Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "WinningPlans pipeline run successfully",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Pass_status_update_WinningPlans_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR WinningPlans_to_DB IS SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"WinningPlans_to_DB completed sccessfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for fail WinningPlans to DB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_WinningPlans_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR WinningPlans_to_DB FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the WinningPlans_to_DB and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_Winning_Plans"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/combined benefits')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update for combined benefits",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Combined Benefits', 'Combined_Benefits_Code', (Select GETDATE()),'Combined Benefits');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Combined Benefits Code",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update for combined benefits",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Combined Benefits/Combined Benefits Code"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End time update for combined benefits code",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Combined Benefits Code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "End time update for combined benefits code fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Combined Benefits Code",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "start time update  Combined Benefits Data Manupulation",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "End time update for combined benefits code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Combined Benefits', 'Combined_Benefits_Data Manupulation', (Select GETDATE()),'Combined Benefits');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Combined Benefits Data Manupulation",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update  Combined Benefits Data Manupulation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Combined Benefits/Combined Benefits Data Manupulation"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End time update  combined benefits data manupulation",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Combined Benefits Data Manupulation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Endtime update combined benefits data manupulation fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Combined Benefits Data Manupulation",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "start time update Columns Add",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "End time update  combined benefits data manupulation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Combined Benefits', 'Combined_Benefits_Data Manupulation', (Select GETDATE()),'Combined Benefits');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Columns Add in Benefit File",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update Columns Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Combined Benefits/Combined Benefits Columns Add in Benefit File"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End time update combined benefits Columns Add",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Columns Add in Benefit File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Endtime update combinedbenefits Columns Add fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Columns Add in Benefit File",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "start time update copy data to sql database",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "End time update combined benefits Columns Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Combined Benefits', 'Combined_Benefits_Data Manupulation', (Select GETDATE()),'Combined Benefits');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "copy combined benefits to sql database",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "start time update copy data to sql database",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output/Output_Benefit_combined/Combined_Benefits_AllBenefits_Yes_No_Melted_New.csv",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "combined_benefits",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Combined_Benefits_Yes_No_Melted"
								}
							}
						]
					},
					{
						"name": "end time update for combined_benefits_load_to_db",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "copy combined benefits to sql database",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for combined benefits load to db fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "copy combined benefits to sql database",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email for combined benefits pipeline success",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for combined_benefits_load_to_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR combined benefits data SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"Check the Output\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for combined benefits data load fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for combined benefits load to db fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR crosswalk data load FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Crosswalk Data Load and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for combined benefits code fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "End time update for combined benefits code fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Combined Benefits UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Combined Benefits Code and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for data manupulation fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Endtime update combined benefits data manupulation fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Combined Benefits UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Combined Benefits Data Manupulation and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for column add fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Endtime update combinedbenefits Columns Add fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Combined Benefits UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Combined Benefits Columns Add in Benefit File and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "string",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "string",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "string",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "string",
						"defaultValue": "Goteg@12345"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:13Z"
			},
			"dependsOn": []
		}
	]
}
{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "planfinder"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SNP_Eligibles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('SNP Eligibles', 'SNP Eligibles_prep', (Select GETDATE()),'SNP Eligibles_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "SNP Eligibles",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Eligibles/SNP Eligibles"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Pass_status_update_SNP Eligibles",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SNP Eligibles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_SNP Eligibles",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SNP Eligibles",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for SNP Eligibles script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_SNP Eligibles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR SNP Eligibles_script FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the SNP Eligibles_script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "start time update_data_upload_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_SNP Eligibles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('SNP Eligibles_script', 'SNP Eligibles_upload_DB', (Select GETDATE()),'SNP\nEligibles_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Copy SNP Eligibles to Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existing record from DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Eligibles / Output / DSNP_Eligible",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SNPEligibles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "SNP_Eligibles"
								}
							}
						]
					},
					{
						"name": "Pass_status_update_SNP Eligibles to DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy SNP Eligibles to Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_SNP Eligibles to DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy SNP Eligibles to Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "SNP Eligibles pipeline run successfully",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Pass_status_update_SNP Eligibles to DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR SNP Eligibles_to_DB IS SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"SNP Eligibles_to_DB completed sccessfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for fail SNP Eligibles to DB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_SNP Eligibles to DB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR SNP Eligibles_to_DB FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the SNP Eligibles_to_DB and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Delete Existing record from DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_data_upload_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "DELETE FROM SNP_Eligibles where Month = (SELECT DATENAME(month,GETDATE())) and Year = (SELECT YEAR(GETDATE()));\nSELECT TOP 10 * FROM SNP_Eligibles;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "SNP Eligibles"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_Eligibles"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/State_County_Org')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "State_Counrt_Org_Script",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start_time_update_geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Geography_Scripts/State_County_Org_Id"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_State_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Id_Mappings/State_details_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "State_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "State_table_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Start_time_update_geo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('GeoIds_script', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_update_geo",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "State_Counrt_Org_Script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_update_geo",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "State_Counrt_Org_Script",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Start_time_update_geoCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit_plan(Operation, StartTime)\nValues('GeoIds_copy', (Select GETDATE()));\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Pass_status_geoIdCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_ParentOrgData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Fail_status_geoidCopy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_ParentOrgData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit_plan\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit_plan);\n\nUpdate Audit_plan\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit_plan);\n\nSelect * from Audit_plan;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Plan_details_Audit_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "send email update for geo script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_geo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR GEOGRAPHY UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the State_County_org Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for geo Id Copy",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_geoidCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR GEOGRAPHY UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Geography ID Copy to database and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Truncate_table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Start_time_update_geoCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table OrgState;\nselect * from OrgState;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "OrgState",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy_County_data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_table_parent_org",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Id_Mappings/County_details_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "County_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "County_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_ParentOrgData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_County_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_Id_Mappings/ParentOrg_details_final",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parent_Org_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parent_org_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate_table_county",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_State_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table OrgCounty;\nselect * from OrgCounty;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "County_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Truncate_table_parent_org",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate_table_county",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table OrgParentOrganization;\nselect * from OrgParentOrganization;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Parent_org_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Pipelines/AEP_Refresh"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test1_enr_data_push')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('enr_trends_pre_broadcasting', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_data_prep",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/Enr_trends_pre_broadcasting_step1_new_ms"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for enr pre broadcasting success",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_data_prep",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting failure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_data_prep",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for enr pre broadcasting script fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting failure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR PRE-BROADCASTING FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends pre-broadcasting script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "start time of broadcasting steps",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('trends_landscape', 'broadcasting_step2a', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting step 2a",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time of broadcasting steps",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/Enr_trends_broadcasting_step_2a"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "send email update for enr  broadcasting step 2b",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR BROADCASTING FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends broadcasting step 2a script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Broadcasting step 2b",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/enr_trends_broadcasting_step2b"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "send email update for enr  broadcasting step 2b failed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2b",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR BROADCASTING FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends broadcasting step 2b script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Broadcasting step 2c",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/enr_trends_broadcasting_step2c"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "send email update for enr  broadcasting step2c failed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR BROADCASTING FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends broadcasting step 2c script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "enr_trends_post_broadcasting_step3",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2c",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/Enrollment_trends_step3/Enr_trends_post_crosswalk_step3_rect2"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Email update for succesfull execution of step3",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "enr_trends_post_broadcasting_step3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR FINAL STEP SUCCEDED\",\n \"color\":\"GREEN\",\n \"message\":\"Debug the enr trends broadcasting step 2c script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Truncate_trends_cw_with_predictions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Email update for succesfull execution of step3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "Truncate table Trends_CW_withpredictions_backup;\n\n-- INSERT INTO dbo.Trends_CW_withpredictions_backup\n-- SELECT * FROM dbo.Trends_CW_withpredictions;\n\n-- Truncate table Trends_CW_withpredictions\n\nSELECT top 10 * from dbo.Trends_CW_withpredictions",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Successfull upload to Trends_CW_with_Predictions",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy_final_data_to_trends_cw_with_predictions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA UPLOADED TO trends_cw_with_predictions\",\n \"color\":\"GREEN\",\n \"message\":\"Data uploaded succesfully heading for data prep procedure\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Upload failed to Trends_CW_with_Predictions_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy_final_data_to_trends_cw_with_predictions",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA UPLOADED TO trends_cw_with_predictions failed\",\n \"color\":\"RED\",\n \"message\":\"Data uploaded failed pl debug\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Email update for failure of step3",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "enr_trends_post_broadcasting_step3",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR FINAL STEP FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends broadcasting step 3 script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy_final_data_to_trends_cw_with_predictions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_trends_cw_with_predictions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Enrollment_trends_dashboard/Output_files",
									"wildcardFileName": "trends_cw_with_stabality_final_output.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stability_Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stability_Index",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Enr_final_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "string",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "string",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "string",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "string",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr_trends/enr_trends_data_check/temp_data_checks"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test1_gw_enr_data_push')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('enr_trends_gw_pre_broadcasting', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1a",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/rectified_folders/enr_trends_gw_pre_broadcasting_step1a_tr"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1a",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1a_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1b",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/Enr_trends_gw_pre_broadcasting_step1b"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "send email update for enr pre broadcasting step1a",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1a_fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR PRE-BROADCASTING STEP 1a FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends pre-broadcasting script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1b_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1b_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1b",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1c_start_update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1b_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('enr_trends_gw_pre_broadcasting_step1c', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1c",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1c_start_update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/enr_trends_gw_pre_broadcasting_step1c"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1c_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1c",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1c_pass_",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting_step2a",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1d",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/gw_broadcasting_folder/Enr_gw_broadcasting_step2a"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for broadcasting step2b",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step2a_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting_step2b",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for broadcasting step2b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/gw_broadcasting_folder/Enr_gw_broadcasting_step2b"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for broadcasting step2b_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step2b fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2b",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting_step2c",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for broadcasting step2b_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/gw_broadcasting_folder/Enr_gw_broadcasting_step2c"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for broadcasting step2c_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2c",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step2c fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Post_broadcasting_step",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for broadcasting step2c_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/rectified_folders/Enr_gw_post_broadcasting_step3_tr"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate_trends_cw_with_predictions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Post_broadcasting_step",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "Truncate table Trends_CW_withpredictions_backup;\n\n-- INSERT INTO dbo.Trends_CW_withpredictions_backup\n-- SELECT * FROM dbo.Trends_CW_withpredictions;\n\n--Truncate table Trends_CW_withpredictions\n\nSELECT top 10 * from dbo.Trends_CW_withpredictions",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy_final_data_to_trends_cw_with_predictions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_trends_cw_with_predictions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stability_Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stability_Index",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Enr_final_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "pre_broadcasting_step1d",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1c_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/enr_trends_gw_pre_broadcasting_step1d"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "string",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "string",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "string",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "string",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr_trends/enr_trends_data_check/temp_data_checks"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test2gw_push')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate_trends_cw_with_predictions",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "Truncate table Trends_CW_withpredictions_backup;\n\n-- INSERT INTO dbo.Trends_CW_withpredictions_backup\n-- SELECT * FROM dbo.Trends_CW_withpredictions;\n\n--Truncate table Trends_CW_withpredictions\n\nSELECT top 10 * from dbo.Trends_CW_withpredictions",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy_final_data_to_trends_cw_with_predictions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_trends_cw_with_predictions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stability_Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stability_Index",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Enr_final_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "string",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "string",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "string",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "string",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr_trends/enr_trends_data_check/temp_data_checks"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/User_log_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "User_Info_Update_on_Azure",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DeleteRecords",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserId"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UserId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ClientId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SessionId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SessionId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsLoggedIn",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IsLoggedIn",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "created_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HealthWorksPlan_SQL_Analytics",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "User_table_Azure_prod",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetUserId",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT  CONCAT(CHAR(39), UserId ,CHAR(39)) from OrgUser;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "HealthWorksPlan_SQL_Analytics",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "UserId",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetUserId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserId",
							"value": {
								"value": "@{activity('GetUserId').output.value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "QueryFormatting",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "UserId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v2",
							"value": {
								"value": "@{replace(replace(replace(replace(replace(replace(replace(replace(replace(variables('UserId'),'[','('),']',')'),'\"',''),'{',''),'}',''),'UserId:',''),':',''),'(',''),')','')}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DeleteRecords",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "QueryFormatting",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DELETE FROM OrgUser WHERE UserId NOT IN (@{variables('v2')});\r\nselect 1 as abc;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "User_table_Azure_prod",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"UserId": {
						"type": "String"
					},
					"v2": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WinningPlans')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('WinningPlans_Script', 'WinningPlansScript_prep', (Select GETDATE()),'WinningPlans');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Winning_Plans",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Winning_Plans/Winning_Plans"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Pass_status_update_WinningPlans",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Winning_Plans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_WinningPlans",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Winning_Plans",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "start time update_data_upload_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Pass_status_update_WinningPlans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('WinningPlans_Script', 'WinningPlans_upload_DB', (Select GETDATE()),'WinningPlans_base_data');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for Eligibles script",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_WinningPlans",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR WinningPlans_Script FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the WinningPlans_Script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Delete Existing record from DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_data_upload_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Truncate table WinningPlans;\nSELECT TOP 10 * FROM WinningPlans;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "WinningPlans"
								}
							}
						}
					},
					{
						"name": "Copy WinningPlans to Db",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existing record from DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "hwaicontainer/WinningPlans/Output/enr_final2.csv"
							},
							{
								"name": "Destination",
								"value": "dbo.@{'WinningPlans'}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": "2023-03-07T00:00:00.000Z",
									"wildcardFolderPath": "WinningPlans/Output",
									"wildcardFileName": "enr_final2.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Statecode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Statecode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Bid_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Bid_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Key_Segment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Segment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Monthly_Consolidated_Premium_C_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual_Drug_Deductible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_Drug_Deductible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Deductible_Health",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Deductible_Health",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MOOP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MOOP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Star_rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Star_rating",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient Hospital-Acute Copay Tier 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient Hospital-Acute Copay Tier 1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SNF MC stay Tier1 Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNF MC stay Tier1 Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cardiac and Pulmonary Rehabilitation Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac and Pulmonary Rehabilitation Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emergency Care Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emergency Care Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transport Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transport Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OTC Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OTC Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OTC Max Coverage Amt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OTC Max Coverage Amt",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Meal Benefit Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Meal Benefit Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Preventive Dental Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Preventive Dental Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Comprehensive Dental Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comprehensive Dental Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye Exams Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye Exams Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eyewear Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eyewear Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hearing Aids Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hearing Aids Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hearing Exams Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hearing Exams Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chiropractic Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chiropractic Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Podiatry Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Podiatry Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Acupuncture Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Acupuncture Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual Physical Exam Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual Physical Exam Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient Blood Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient Blood Services Coinsurance/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Alternative Therapy Coins/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Alternative Therapy Coins/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERS Coins/Copay",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PERS Coins/Copay",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Grand_Total",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Grand_Total",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Inpatient_Hospital_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Inpatient_Hospital_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Snf_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Snf_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Cardiac_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cardiac_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emergency_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emergency_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Chiropractor_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Chiropractor_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Podiatry_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Podiatry_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Outpatient_Blood_Services_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Outpatient_Blood_Services_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Transportation_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Transportation_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Accupuncture_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Accupuncture_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Over_the_Counter_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Over_the_Counter_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Meal_Services_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Meal_Services_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Annual_Physical_Exam_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Annual_Physical_Exam_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Pre_Dental_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pre_Dental_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Comp_Dental_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Comp_Dental_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Exam_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Exam_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Eye_Wear_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eye_Wear_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hear_Exam_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hear_Exam_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hear_Aid_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hear_Aid_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Giveback_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Giveback_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Alternative_Therapy_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Alternative_Therapy_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERS_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PERS_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PDSS_YN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PDSS_YN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "pbp_d_mco_pay_reduct_amt",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pbp_d_mco_pay_reduct_amt",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2019",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2019",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2020",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2020",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2021",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2022",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "January_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "February_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "March_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "March_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "April_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "April_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "May_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "May_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "June_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "June_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "July_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "July_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "August_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "August_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "September_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "September_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "October_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "October_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "November_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "November_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "December_2023",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "December_2023",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WinningPlans",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "WinningPlans"
								}
							}
						]
					},
					{
						"name": "Pass_status_update_WinningPlans_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy WinningPlans to Db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Fail_status_update_WinningPlans_to_DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy WinningPlans to Db",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "WinningPlans pipeline run successfully",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Pass_status_update_WinningPlans_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR WinningPlans_to_DB IS SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"WinningPlans_to_DB completed sccessfully\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for fail WinningPlans to DB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Fail_status_update_WinningPlans_to_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR WinningPlans_to_DB FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the WinningPlans_to_DB and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_Winning_Plans"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/combined benefits')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update for combined benefits",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Combined Benefits', 'Combined_Benefits_Code', (Select GETDATE()),'Combined Benefits');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Combined Benefits Code",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update for combined benefits",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Combined Benefits/Combined Benefits Code"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End time update for combined benefits code",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Combined Benefits Code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "End time update for combined benefits code fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Combined Benefits Code",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "start time update  Combined Benefits Data Manupulation",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "End time update for combined benefits code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Combined Benefits', 'Combined_Benefits_Data Manupulation', (Select GETDATE()),'Combined Benefits');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Combined Benefits Data Manupulation",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update  Combined Benefits Data Manupulation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Combined Benefits/Combined Benefits Data Manupulation"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End time update  combined benefits data manupulation",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Combined Benefits Data Manupulation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Endtime update combined benefits data manupulation fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Combined Benefits Data Manupulation",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "start time update Columns Add",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "End time update  combined benefits data manupulation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Combined Benefits', 'Combined_Benefits_Data Manupulation', (Select GETDATE()),'Combined Benefits');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Columns Add in Benefit File",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update Columns Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Combined Benefits/Combined Benefits Columns Add in Benefit File"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End time update combined benefits Columns Add",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Columns Add in Benefit File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Endtime update combinedbenefits Columns Add fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Columns Add in Benefit File",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "start time update copy data to sql database",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "End time update combined benefits Columns Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Combined Benefits', 'Combined_Benefits_Data Manupulation', (Select GETDATE()),'Combined Benefits');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "copy combined benefits to sql database",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "start time update copy data to sql database",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output/Output_Benefit_combined/Combined_Benefits_AllBenefits_Yes_No_Melted_New.csv",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "combined_benefits",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Combined_Benefits_Yes_No_Melted"
								}
							}
						]
					},
					{
						"name": "end time update for combined_benefits_load_to_db",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "copy combined benefits to sql database",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for combined benefits load to db fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "copy combined benefits to sql database",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "combined_benefits_sql_Table",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email for combined benefits pipeline success",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for combined_benefits_load_to_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR combined benefits data SUCCESS\",\n \"color\":\"GREEN\",\n \"message\":\"Check the Output\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for combined benefits data load fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for combined benefits load to db fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR crosswalk data load FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Crosswalk Data Load and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for combined benefits code fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "End time update for combined benefits code fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Combined Benefits UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Combined Benefits Code and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for data manupulation fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Endtime update combined benefits data manupulation fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Combined Benefits UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Combined Benefits Data Manupulation and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for column add fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Endtime update combinedbenefits Columns Add fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR Combined Benefits UPDATE FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the Combined Benefits Columns Add in Benefit File and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "string",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "string",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "string",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "string",
						"defaultValue": "Goteg@12345"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:13Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datapush_sql_check')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "final_data_to_trends_cw_with_predictions_copy1_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Enrollment_trends_dashboard/Output_files",
									"wildcardFileName": "trends_cw_with_stabality_final_output.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stability_Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stability_Index",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Enr_final_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Successfull upload to Trends_CW_with_Predictions",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "final_data_to_trends_cw_with_predictions_copy1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA UPLOADED TO trends_cw_with_predictions\",\n \"color\":\"GREEN\",\n \"message\":\"Data uploaded succesfully heading for data prep procedure\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Upload failed to Trends_CW_with_Predictions_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "final_data_to_trends_cw_with_predictions_copy1_copy1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA UPLOADED TO trends_cw_with_predictions failed\",\n \"color\":\"RED\",\n \"message\":\"Data uploaded failed pl debug\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr_trends/enr_trends_data_check"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/enr_details_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Enr_script",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/Plan_Finder/Enrollment_Scripts/Enrollment_data"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_enr_data_to_database",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete data if exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Output_enrollment/Enrollment_final_data",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Enr_Output",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "OrgEnrollment"
								}
							}
						]
					},
					{
						"name": "Send email update",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for enr data load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENROLLMENT REFRESH COMPLETED\",\n \"color\":\"Green\",\n \"message\":\"monthly refresh of enrollment completed\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for failure",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Enr_script",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENROLLMENT REFRESH FAILED\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Enr_script').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for failure in copy files",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy_enr_data_to_database",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENROLLMENT REFRESH FAILED\",\n \"color\":\"RED\",\n \"message\":\"monthly refresh of enrollment pipeline gave an error in copying the table to database. plz check it in the pipeline and resolve the error\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Enrolment', 'Enrolment_monthly_refresh', (Select GETDATE()),'Plan Finder');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for Crosswalk_raw_file_processing",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Enr_script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for crosswalk fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "send email update for failure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "start time update_enr_data_load_to_db",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for Crosswalk_raw_file_processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('Enrolment', 'Enrolment_data_load_to_db', (Select GETDATE()),'Plan Finder');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr data load",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_enr_data_to_database",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for cenr data load fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "send email update for failure in copy files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Delete data if exists",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "start time update_enr_data_load_to_db",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "DELETE FROM OrgEnrollment where Month = (SELECT DATENAME(month,GETDATE())) and Year = (SELECT YEAR(GETDATE()));\nSELECT TOP 10 * FROM OrgEnrollment;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "OrgEnrollment"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "String",
						"defaultValue": "teghws.database.windows.net"
					},
					"db_name": {
						"type": "String",
						"defaultValue": "pf_data_prod"
					},
					"user_name": {
						"type": "String",
						"defaultValue": "hwstegadmin"
					},
					"password": {
						"type": "String",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "PF_Pipelines/Monthly_Refresh"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T04:36:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/enr_gw_trends_datapush')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate_trends_cw_with_predictions_backup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "Truncate table Trends_CW_withpredictions_backup;\n\n\nSELECT top 10 * from dbo.Trends_CW_withpredictions",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable8",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data to trends_cw_with_predictions_backup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_trends_cw_with_predictions_backup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Enrollment_trends_gateway_dashboard/output_files",
									"wildcardFileName": "trends_cw_with_stabality_final_output.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stability_Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stability_Index",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText8",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable9",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data upload succesfull",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data to trends_cw_with_predictions_backup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA uploaded succesfully\",\n \"color\":\"GREEN\",\n \"message\":\"Data prep procedure succesfull\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Data upload Unsuccesfull",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA PROCEDRE Unsuccesfull\",\n \"color\":\"RED\",\n \"message\":\"Data prep procedure succesfull\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Data upload Unsuccesfull_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data to trends_cw_with_predictions_backup",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA PROCEDRE Unsuccesfull\",\n \"color\":\"RED\",\n \"message\":\"Data prep procedure succesfull\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr_trends/enr_trends_data_check"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/enr_trends_base_data_push')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to trends_cw_with_predictions_backup",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Trends_backup_data_populate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Enrollment_trends_dashboard/Output_files",
									"wildcardFileName": "trends_cw_with_stabality_final_output.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stability_Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stability_Index",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Enr_final_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "datalake_sql_transfer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Trends_backup_data_populate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "Truncate table Trends_CW_withpredictions_backup;\n\n\nSELECT top 10 * from dbo.Trends_CW_withpredictions",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Data upload succesfull",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data to trends_cw_with_predictions_backup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA uploaded succesfully\",\n \"color\":\"GREEN\",\n \"message\":\"Data prep procedure succesfull\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Data upload Unsuccesfull",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data to trends_cw_with_predictions_backup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA PROCEDRE Unsuccesfull\",\n \"color\":\"RED\",\n \"message\":\"Data prep procedure succesfull\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr_trends/enr_trends_data_check"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/enr_trends_gw_v1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('enr_trends_gw_pre_broadcasting', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1a",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/rectified_folders/enr_trends_gw_pre_broadcasting_step1a_tr"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1a",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1a_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1b",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/Enr_trends_gw_pre_broadcasting_step1b"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "send email update for enr pre broadcasting step1a",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1a_fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR PRE-BROADCASTING STEP 1a FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends pre-broadcasting script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1b_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1b_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1b",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1c_start_update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1b_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('enr_trends_gw_pre_broadcasting_step1c', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1c",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1c_start_update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/enr_trends_gw_pre_broadcasting_step1c"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1c_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1c",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1c_pass_",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "broadcasting_step_start",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1c_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('broadcasting_start', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting_step2a",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "broadcasting_step_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/gw_broadcasting_folder/Enr_gw_broadcasting_step2a"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for broadcasting step2b",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step2a_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting_step2b",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for broadcasting step2b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/gw_broadcasting_folder/Enr_gw_broadcasting_step2b"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for broadcasting step2b_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step2b fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2b",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting_step2c",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for broadcasting step2b_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/gw_broadcasting_folder/Enr_gw_broadcasting_step2c"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for broadcasting step2c_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2c",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step2c fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Post_broadcasting_step",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for broadcasting step2c_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/rectified_folders/Enr_gw_post_broadcasting_step3_tr"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate_trends_cw_with_predictions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Post_broadcasting_step",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "-- Truncate table Trends_CW_withpredictions_backup;\n\n-- INSERT INTO dbo.Trends_CW_withpredictions_backup\n-- SELECT * FROM dbo.Trends_CW_withpredictions;\n\nTruncate table Trends_CW_withpredictions\n\nSELECT top 10 * from dbo.Trends_CW_withpredictions",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy_final_data_to_trends_cw_with_predictions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_trends_cw_with_predictions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stability_Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stability_Index",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Enr_final_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Remaining data prep procedure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy_final_data_to_trends_cw_with_predictions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": " \n\n--TRUNCATE the table and INSERT the data FROM main table\nTRUNCATE table RoopaETPreData;\nINSERT into RoopaETPreData\nSELECT [State]\n      ,[County]\n,(CASE WHEN len(cast(Plan_ID as varchar(50)))='3' and left(cast(Plan_ID as varchar(50)),1)='8' THEN 'Group MA Plans' ELSE 'Individual MA Plans' END)IndGroupPlans,\n(CASE WHEN ((LEFT([Contract_ID],1) ='H' or LEFT([Contract_ID],1) = 'R')) AND [Offers_Part_D]='Yes' THEN 'MA-PD'\nWHEN ((LEFT([Contract_ID],1) ='H' or LEFT([Contract_ID],1) = 'R')) AND [Offers_Part_D]='No' THEN 'MA (without drugs)'\nWHEN (LEFT([Contract_ID],1) ='E' or LEFT([Contract_ID],1) = 'S') THEN 'PDP' END) as MAPDP\n      ,[Special_Needs_Plan_Type] as [SNP]\n      ,[Plan_Type] as [PlanType]\n      ,[Plan_Name] as [PlanName]\n      ,[Key_Cp_Id] as [BidId]\n      ,[Parent_Organization] as [OrganizationName]\n      ,[Year]\n      ,[Month] as [MonthName]\n      ,[Enrollments]\n      ,[ma_eligibles] as [MAEligibles]\n      ,[Stability_Index] as [StabilityIndex]\n\t  --,'Yes' as [Prediction] \n      ,'No' as [Prediction] \n      ,[EGHP]\n      ,[FIPS_State_County_Code]\n      ,[Offers_Part_D]\n      ,[Other Dual Full Medicaid Benefit] as [Other_Dual_Full_Medicaid_Benefit]\n      ,[Plan_ID]\n      ,[QDWI]\n      ,[QI]\n      ,[QMB only] as [QMB_Only]\n      ,[QMB plus Full Medicaid Benefits] as [QMB_Plus_Full_Medicaid_Benefits]\n      ,[SLMB only] as [SLMB_only]\n      ,[SLMB plus Full Medicaid Benefits] as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,[SNP_Eligibles]\n      ,[SNP_Plan]\n      ,[SSA_State_County_Code]\n      ,[Contract_ID],null,null,null,null,null,null,null\n\t  ,[Status]\n  FROM [HWAIETV2DBTEST].[dbo].[Trends_CW_withpredictions];\n  \n \nDELETE FROM RoopaETPreData WHERE monthname='';\n  \nUPDATE a SET  a.OrganizationID=b.OrganizationID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsOrganization b ON a.OrganizationName = b.OrganizationName;\n\n--SELECT *  FROM RoopaETPreData where organizationid is null;\n\nINSERT into EnrollmentTrendsOrganization\nSELECT distinct OrganizationName FROM RoopaETPreData where organizationid is null\norder by OrganizationName;\n\nUPDATE a SET  a.OrganizationID=b.OrganizationID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsOrganization b ON a.OrganizationName = b.OrganizationName\nwhere a.OrganizationID is null;\n\nUPDATE a SET  a.StateID=b.StateID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsState b ON a.State = b.State;\n\n--SELECT * FROM RoopaETPreData where stateid is null;\n\nUPDATE a SET  a.CountyID=b.CountyID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsCounty b ON a.County = b.County;\n\n--SELECT * FROM RoopaETPreData where CountyID is null;\n\nUPDATE a SET  a.IndGroupPlansID=b.IndGroupPlansID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsIndGroupPlans b ON a.IndGroupPlans = b.IndGroupPlans;\n\n--SELECT * FROM RoopaETPreData where IndGroupPlansID is null;\n\nUPDATE a SET  a.MAPDPID=b.MAPDPID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsMAPDP b ON a.MAPDP = b.MAPDP;\n\n--SELECT * FROM RoopaETPreData where MAPDPID is null;\n\nUPDATE a SET  a.SNPID=b.SNPID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsSNP b ON a.SNP = b.SNP;\n\n--SELECT * FROM RoopaETPreData where SNPID is null;\n\nUPDATE a SET  a.PlanTypeID=b.PlanTypeID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsPlanType b ON a.PlanType = b.PlanType;\n\n--SELECT * FROM RoopaETPreData where PlanTypeID is null;\n\n--Get data for filters\nTRUNCATE table EnrollmentTrendsFilters;\nINSERT into EnrollmentTrendsFilters\nSELECT distinct \n      [OrganizationID]\n      ,[StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n  FROM [HWAIETV2DBTEST].[dbo].RoopaETPreData;\n \n --get data for filters\nTRUNCATE table EnrollmentTrendsSubFilters;\nINSERT into EnrollmentTrendsSubFilters\nSELECT distinct \n      [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n  FROM [HWAIETV2DBTEST].[dbo].RoopaETPreData;\n  \n--Get Data for EnrollmentTrendsData\nTRUNCATE table EnrollmentTrendsData;\nINSERT into EnrollmentTrendsData\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]  \n\t  ,[OrganizationID]\n\t  ,[PlanName]\n      ,[BidId]\n      ,[Year]\n      ,[MonthName]\n      ,[Enrollments]\n\t  ,[MAEligibles]\n      ,[StabilityIndex]\n      ,[Prediction]\n      ,[EGHP]\n      ,[FIPS_State_County_Code]\n      ,[Offers_Part_D]\n      ,[Other_Dual_Full_Medicaid_Benefit]\n      ,[Plan_ID]\n      ,[QDWI]\n      ,[QI]\n      ,[QMB_Only]\n      ,[QMB_Plus_Full_Medicaid_Benefits]\n      ,[SLMB_only]\n      ,[SLMB_Plus_Full_Medicaid_Benefits]\n      ,[SNP_Eligibles]\n      ,[SNP_Plan]\n      ,[SSA_State_County_Code]\n      ,[Contract_ID],null,null\n\t  ,[Status]\n\n  FROM [HWAIETV2DBTEST].[dbo].RoopaETPreData;\n  \n  \n--alter table  [HWAIETV2DBTEST].[dbo].[EnrollmentTrendsData] add MonthNumber int\n--alter table  [HWAIETV2DBTEST].[dbo].[EnrollmentTrendsData] add MonthYear int\n\nupdate EnrollmentTrendsData set monthnumber=charindex(left([MonthName],3),'JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC')/4+1;\nupdate EnrollmentTrendsData set monthyear=CONVERT(char(6), DATEFROMPARTS(year, monthnumber, 1), 112);\n\n-- to replace 0 with nulls as it disturbs the average of eligibles\nUPDATE EnrollmentTrendsData SET MAEligibles = CASE WHEN MAEligibles=0 THEN NULL ELSE MAEligibles END;\n\nTRUNCATE table [ETDFilterLevelWithoutPrediction];\nINSERT into [ETDFilterLevelWithoutPrediction]\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction]\t  \n      ,Sum([Enrollments]) as [Enrollments]\n      ,Avg([MAEligibles]) as [MAEligibles]\n      ,Avg([StabilityIndex])  as [StabilityIndex]    \n      ,Avg([Other_Dual_Full_Medicaid_Benefit])    as [Other_Dual_Full_Medicaid_Benefit]\n      ,Avg([QMB_Plus_Full_Medicaid_Benefits])   as [QMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SLMB_Plus_Full_Medicaid_Benefits]) as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SNP_Eligibles])    as [SNP_Eligibles]  \n\t  ,null as FilterID\n\t  ,[Status]\n  FROM [HWAIETV2DBTEST].[dbo].[EnrollmentTrendsData]\n  where prediction='No'\n  group by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction]\n\t  ,[Status]\n\t   order  by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction];\n\nUPDATE a SET  a.FilterID=b.EnrollmentTrendsSubFiltersKey\nFROM ETDFilterLevelWithoutPrediction a INNER JOIN EnrollmentTrendsSubFilters b ON \na.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\nINSERT into ETDFilterLevelWithPrediction\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction]\t  \n      ,Sum([Enrollments]) as [Enrollments]\n      ,Avg([MAEligibles]) as [MAEligibles]\n      ,Avg([StabilityIndex])  as [StabilityIndex]    \n      ,Avg([Other_Dual_Full_Medicaid_Benefit])    as [Other_Dual_Full_Medicaid_Benefit]\n      ,Avg([QMB_Plus_Full_Medicaid_Benefits])   as [QMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SLMB_Plus_Full_Medicaid_Benefits]) as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SNP_Eligibles])    as [SNP_Eligibles]  \n\t  ,null as FilterID\n\t  ,[Status]\n\t  \n  FROM [HWAIETV2DBTEST].[dbo].[EnrollmentTrendsData]\n  where prediction='Yes'\n  group by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction]\n\t  ,[Status]\n\t   order  by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction];\n\n\t  UPDATE a SET  a.FilterID=b.EnrollmentTrendsSubFiltersKey\nFROM ETDFilterLevelWithPrediction a INNER JOIN EnrollmentTrendsSubFilters b ON \na.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\t  /****** Script for SELECTTopNRows command FROM SSMS  ******/\nTRUNCATE table ETDOrganizationLevelWithoutPrediction;\nINSERT into ETDOrganizationLevelWithoutPrediction\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n      ,[MonthName]\n\t  ,[MonthNumber]\n      ,[MonthYear]\n\t  ,[Prediction]\n      ,Sum([Enrollments]) as [Enrollments]\n      ,Avg([MAEligibles]) as [MAEligibles]\n      ,Avg([StabilityIndex])  as [StabilityIndex]    \n      ,Avg([Other_Dual_Full_Medicaid_Benefit])    as [Other_Dual_Full_Medicaid_Benefit]\n      ,Avg([QMB_Plus_Full_Medicaid_Benefits])   as [QMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SLMB_Plus_Full_Medicaid_Benefits]) as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SNP_Eligibles])    as [SNP_Eligibles]  \n\t  ,count(distinct BidId) as NoOfPlans,\n\t  null as FilterID,\n\t  null as SubFilterID\n  FROM [HWAIETV2DBTEST].[dbo].[EnrollmentTrendsData]\n  where Prediction='No'\n  group by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n      ,[MonthName]\n\t  ,[MonthNumber]\n      ,[MonthYear]\n\t  ,[Prediction]\n\t  order  by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n\t  ,[MonthYear]\n\t  ,[Prediction];\n\n\nUPDATE a SET  a.FilterID=b.PKey\nFROM ETDOrganizationLevelWithoutPrediction a INNER JOIN EnrollmentTrendsFilters b ON \na.OrganizationID=b.OrganizationID and a.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\nUPDATE a SET  a.SubFilterID=b.EnrollmentTrendsSubFiltersKey\nFROM ETDOrganizationLevelWithoutPrediction a INNER JOIN EnrollmentTrendsSubFilters b ON \na.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\nINSERT into ETDOrganizationLevelWithPrediction\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n      ,[MonthName]\n\t  ,[MonthNumber]\n      ,[MonthYear]\n\t  ,[Prediction]\t  \n      ,Sum([Enrollments]) as [Enrollments]\n      ,Avg([MAEligibles]) as [MAEligibles]\n      ,Avg([StabilityIndex])  as [StabilityIndex]    \n      ,Avg([Other_Dual_Full_Medicaid_Benefit])    as [Other_Dual_Full_Medicaid_Benefit]\n      ,Avg([QMB_Plus_Full_Medicaid_Benefits])   as [QMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SLMB_Plus_Full_Medicaid_Benefits]) as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SNP_Eligibles])    as [SNP_Eligibles]  \n\t  ,count(distinct BidId) as NoOfPlans,\n\t  null as FilterID,\n\t  null as SubFilterID\n  FROM [HWAIETV2DBTEST].[dbo].[EnrollmentTrendsData]\n  where Prediction='Yes'\n  group by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n      ,[MonthName]\n\t  ,[MonthNumber]\n      ,[MonthYear]\n\t  ,[Prediction]\n\t  order  by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n\t  ,[MonthYear]\n\t  ,[Prediction];\n\n\nUPDATE a SET  a.FilterID=b.PKey\nFROM ETDOrganizationLevelWithPrediction a INNER JOIN EnrollmentTrendsFilters b ON \na.OrganizationID=b.OrganizationID and a.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\nUPDATE a SET  a.SubFilterID=b.EnrollmentTrendsSubFiltersKey\nFROM ETDOrganizationLevelWithPrediction a INNER JOIN EnrollmentTrendsSubFilters b ON \na.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\n\nTRUNCATE table [ETDPlans];\nINSERT into  [HWAIETV2DBTEST].[dbo].[ETDPlans]\nSELECT [MonthYear],[OrganizationID],count(distinct BidId) [NoOfplans]\nFROM EnrollmentTrendsData \nGROUP BY [MonthYear],[OrganizationID];\n\t   \nTRUNCATE table [EnrollmentTrendsMonthYear];\nINSERT into [EnrollmentTrendsMonthYear]\nSELECT distinct [Year],[MonthNumber],[Monthyear]\nFROM [HWAIETV2DBTEST].[dbo].[EnrollmentTrendsData]\nORDER BY [Year],[MonthNumber];\n--END\n\nexec sp_updatestats\n\nSELECT TOP 10 * FROM EnrollmentTrendsState;\n\n",
								"queryTimeout": "04:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable4",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Final data prep procedure succesfull",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Remaining data prep procedure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA PROCEDRE RAN succesfully\",\n \"color\":\"GREEN\",\n \"message\":\"Data prep procedure succesfull\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Final data prep procedure succesfull_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Remaining data prep procedure",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA PROCEDRE RAN succesfully\",\n \"color\":\"GREEN\",\n \"message\":\"Data prep procedure succesfull\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "string",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "string",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "string",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "string",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr_trends"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/enrollment_trends')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('enr_trends_pre_broadcasting', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_data_prep",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/Enr_trends_pre_broadcasting_step1_new_ms"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for enr pre broadcasting success",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_data_prep",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting failure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_data_prep",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'Fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for enr pre broadcasting script fail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting failure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR PRE-BROADCASTING FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends pre-broadcasting script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "start time of broadcasting steps",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('trends_landscape', 'broadcasting_step2a', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting step 2a",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time of broadcasting steps",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/Enr_trends_broadcasting_step_2a"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "send email update for enr  broadcasting step 2b",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR BROADCASTING FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends broadcasting step 2a script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Broadcasting step 2b",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/enr_trends_broadcasting_step2b"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "send email update for enr  broadcasting step 2b failed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2b",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR BROADCASTING FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends broadcasting step 2b script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Broadcasting step 2c",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/enr_trends_broadcasting_step2c"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "send email update for enr  broadcasting step2c failed",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR BROADCASTING FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends broadcasting step 2c script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "enr_trends_post_broadcasting_step3",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Broadcasting step 2c",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends/Enrollment_trends_step3/Enr_trends_post_crosswalk_step3_rect2"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Email update for succesfull execution of step3",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "enr_trends_post_broadcasting_step3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR FINAL STEP SUCCEDED\",\n \"color\":\"GREEN\",\n \"message\":\"Debug the enr trends broadcasting step 2c script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Truncate_trends_cw_with_predictions",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Email update for succesfull execution of step3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "Truncate table Trends_CW_withpredictions_backup;\n\nINSERT INTO dbo.Trends_CW_withpredictions_backup\nSELECT * FROM dbo.Trends_CW_withpredictions;\n\nTruncate table Trends_CW_withpredictions\n\nSELECT top 10 * from dbo.Trends_CW_withpredictions",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Successfull upload to Trends_CW_with_Predictions",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy_final_data_to_trends_cw_with_predictions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA UPLOADED TO trends_cw_with_predictions\",\n \"color\":\"GREEN\",\n \"message\":\"Data uploaded succesfully heading for data prep procedure\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Remaining data prep procedure",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Successfull upload to Trends_CW_with_Predictions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "\n\n--TRUNCATE the table and INSERT the data FROM main table\nTRUNCATE table RoopaETPreData;\nINSERT into RoopaETPreData\nSELECT [State]\n      ,[County]\n,(CASE WHEN len(cast(Plan_ID as varchar(50)))='3' and left(cast(Plan_ID as varchar(50)),1)='8' THEN 'Group MA Plans' ELSE 'Individual MA Plans' END)IndGroupPlans,\n(CASE WHEN ((LEFT([Contract_ID],1) ='H' or LEFT([Contract_ID],1) = 'R')) AND [Offers_Part_D]='Yes' THEN 'MA-PD'\nWHEN ((LEFT([Contract_ID],1) ='H' or LEFT([Contract_ID],1) = 'R')) AND [Offers_Part_D]='No' THEN 'MA (without drugs)'\nWHEN (LEFT([Contract_ID],1) ='E' or LEFT([Contract_ID],1) = 'S') THEN 'PDP' END) as MAPDP\n      ,[Special_Needs_Plan_Type] as [SNP]\n      ,[Plan_Type] as [PlanType]\n      ,[Plan_Name] as [PlanName]\n      ,[Key_Cp_Id] as [BidId]\n      ,[Parent_Organization] as [OrganizationName]\n      ,[Year]\n      ,[Month] as [MonthName]\n      ,[Enrollments]\n      ,[ma_eligibles] as [MAEligibles]\n      ,[Stability_Index] as [StabilityIndex]\n\t  --,'Yes' as [Prediction] \n      ,'No' as [Prediction] \n      ,[EGHP]\n      ,[FIPS_State_County_Code]\n      ,[Offers_Part_D]\n      ,[Other Dual Full Medicaid Benefit] as [Other_Dual_Full_Medicaid_Benefit]\n      ,[Plan_ID]\n      ,[QDWI]\n      ,[QI]\n      ,[QMB only] as [QMB_Only]\n      ,[QMB plus Full Medicaid Benefits] as [QMB_Plus_Full_Medicaid_Benefits]\n      ,[SLMB only] as [SLMB_only]\n      ,[SLMB plus Full Medicaid Benefits] as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,[SNP_Eligibles]\n      ,[SNP_Plan]\n      ,[SSA_State_County_Code]\n      ,[Contract_ID],null,null,null,null,null,null,null\n\t  ,[Status]\n  FROM [HWAIETDBTEST].[dbo].[Trends_CW_withpredictions];\n  \n \nDELETE FROM RoopaETPreData WHERE monthname='';\n  \nUPDATE a SET  a.OrganizationID=b.OrganizationID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsOrganization b ON a.OrganizationName = b.OrganizationName;\n\n--SELECT *  FROM RoopaETPreData where organizationid is null;\n\nINSERT into EnrollmentTrendsOrganization\nSELECT distinct OrganizationName FROM RoopaETPreData where organizationid is null\norder by OrganizationName;\n\nUPDATE a SET  a.OrganizationID=b.OrganizationID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsOrganization b ON a.OrganizationName = b.OrganizationName\nwhere a.OrganizationID is null;\n\nUPDATE a SET  a.StateID=b.StateID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsState b ON a.State = b.State;\n\n--SELECT * FROM RoopaETPreData where stateid is null;\n\nUPDATE a SET  a.CountyID=b.CountyID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsCounty b ON a.County = b.County;\n\n--SELECT * FROM RoopaETPreData where CountyID is null;\n\nUPDATE a SET  a.IndGroupPlansID=b.IndGroupPlansID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsIndGroupPlans b ON a.IndGroupPlans = b.IndGroupPlans;\n\n--SELECT * FROM RoopaETPreData where IndGroupPlansID is null;\n\nUPDATE a SET  a.MAPDPID=b.MAPDPID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsMAPDP b ON a.MAPDP = b.MAPDP;\n\n--SELECT * FROM RoopaETPreData where MAPDPID is null;\n\nUPDATE a SET  a.SNPID=b.SNPID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsSNP b ON a.SNP = b.SNP;\n\n--SELECT * FROM RoopaETPreData where SNPID is null;\n\nUPDATE a SET  a.PlanTypeID=b.PlanTypeID\nFROM RoopaETPreData a INNER JOIN EnrollmentTrendsPlanType b ON a.PlanType = b.PlanType;\n\n--SELECT * FROM RoopaETPreData where PlanTypeID is null;\n\n--Get data for filters\nTRUNCATE table EnrollmentTrendsFilters;\nINSERT into EnrollmentTrendsFilters\nSELECT distinct \n      [OrganizationID]\n      ,[StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n  FROM [HWAIETDBTEST].[dbo].RoopaETPreData;\n \n --get data for filters\nTRUNCATE table EnrollmentTrendsSubFilters;\nINSERT into EnrollmentTrendsSubFilters\nSELECT distinct \n      [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n  FROM [HWAIETDBTEST].[dbo].RoopaETPreData;\n  \n--Get Data for EnrollmentTrendsData\nTRUNCATE table EnrollmentTrendsData;\nINSERT into EnrollmentTrendsData\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]  \n\t  ,[OrganizationID]\n\t  ,[PlanName]\n      ,[BidId]\n      ,[Year]\n      ,[MonthName]\n      ,[Enrollments]\n\t  ,[MAEligibles]\n      ,[StabilityIndex]\n      ,[Prediction]\n      ,[EGHP]\n      ,[FIPS_State_County_Code]\n      ,[Offers_Part_D]\n      ,[Other_Dual_Full_Medicaid_Benefit]\n      ,[Plan_ID]\n      ,[QDWI]\n      ,[QI]\n      ,[QMB_Only]\n      ,[QMB_Plus_Full_Medicaid_Benefits]\n      ,[SLMB_only]\n      ,[SLMB_Plus_Full_Medicaid_Benefits]\n      ,[SNP_Eligibles]\n      ,[SNP_Plan]\n      ,[SSA_State_County_Code]\n      ,[Contract_ID],null,null\n\t  ,[Status]\n\n  FROM [HWAIETDBTEST].[dbo].RoopaETPreData;\n  \n  \n--alter table  [HWAIETDBTEST].[dbo].[EnrollmentTrendsData] add MonthNumber int\n--alter table  [HWAIETDBTEST].[dbo].[EnrollmentTrendsData] add MonthYear int\n\nupdate EnrollmentTrendsData set monthnumber=charindex(left([MonthName],3),'JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC')/4+1;\nupdate EnrollmentTrendsData set monthyear=CONVERT(char(6), DATEFROMPARTS(year, monthnumber, 1), 112);\n\n-- to replace 0 with nulls as it disturbs the average of eligibles\nUPDATE EnrollmentTrendsData SET MAEligibles = CASE WHEN MAEligibles=0 THEN NULL ELSE MAEligibles END;\n\nTRUNCATE table [ETDFilterLevelWithoutPrediction];\nINSERT into [ETDFilterLevelWithoutPrediction]\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction]\t  \n      ,Sum([Enrollments]) as [Enrollments]\n      ,Avg([MAEligibles]) as [MAEligibles]\n      ,Avg([StabilityIndex])  as [StabilityIndex]    \n      ,Avg([Other_Dual_Full_Medicaid_Benefit])    as [Other_Dual_Full_Medicaid_Benefit]\n      ,Avg([QMB_Plus_Full_Medicaid_Benefits])   as [QMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SLMB_Plus_Full_Medicaid_Benefits]) as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SNP_Eligibles])    as [SNP_Eligibles]  \n\t  ,null as FilterID\n\t  ,[Status]\n  FROM [HWAIETDBTEST].[dbo].[EnrollmentTrendsData]\n  where prediction='No'\n  group by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction]\n\t  ,[Status]\n\t   order  by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction];\n\nUPDATE a SET  a.FilterID=b.EnrollmentTrendsSubFiltersKey\nFROM ETDFilterLevelWithoutPrediction a INNER JOIN EnrollmentTrendsSubFilters b ON \na.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\nINSERT into ETDFilterLevelWithPrediction\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction]\t  \n      ,Sum([Enrollments]) as [Enrollments]\n      ,Avg([MAEligibles]) as [MAEligibles]\n      ,Avg([StabilityIndex])  as [StabilityIndex]    \n      ,Avg([Other_Dual_Full_Medicaid_Benefit])    as [Other_Dual_Full_Medicaid_Benefit]\n      ,Avg([QMB_Plus_Full_Medicaid_Benefits])   as [QMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SLMB_Plus_Full_Medicaid_Benefits]) as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SNP_Eligibles])    as [SNP_Eligibles]  \n\t  ,null as FilterID\n\t  ,[Status]\n\t  \n  FROM [HWAIETDBTEST].[dbo].[EnrollmentTrendsData]\n  where prediction='Yes'\n  group by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction]\n\t  ,[Status]\n\t   order  by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n      ,[Year]\n      ,[MonthName]\n      ,[MonthNumber]\n      ,[MonthYear]\n      ,[Prediction];\n\n\t  UPDATE a SET  a.FilterID=b.EnrollmentTrendsSubFiltersKey\nFROM ETDFilterLevelWithPrediction a INNER JOIN EnrollmentTrendsSubFilters b ON \na.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\t  /****** Script for SELECTTopNRows command FROM SSMS  ******/\nTRUNCATE table ETDOrganizationLevelWithoutPrediction;\nINSERT into ETDOrganizationLevelWithoutPrediction\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n      ,[MonthName]\n\t  ,[MonthNumber]\n      ,[MonthYear]\n\t  ,[Prediction]\n      ,Sum([Enrollments]) as [Enrollments]\n      ,Avg([MAEligibles]) as [MAEligibles]\n      ,Avg([StabilityIndex])  as [StabilityIndex]    \n      ,Avg([Other_Dual_Full_Medicaid_Benefit])    as [Other_Dual_Full_Medicaid_Benefit]\n      ,Avg([QMB_Plus_Full_Medicaid_Benefits])   as [QMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SLMB_Plus_Full_Medicaid_Benefits]) as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SNP_Eligibles])    as [SNP_Eligibles]  \n\t  ,count(distinct BidId) as NoOfPlans,\n\t  null as FilterID,\n\t  null as SubFilterID\n  FROM [HWAIETDBTEST].[dbo].[EnrollmentTrendsData]\n  where Prediction='No'\n  group by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n      ,[MonthName]\n\t  ,[MonthNumber]\n      ,[MonthYear]\n\t  ,[Prediction]\n\t  order  by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n\t  ,[MonthYear]\n\t  ,[Prediction];\n\n\nUPDATE a SET  a.FilterID=b.PKey\nFROM ETDOrganizationLevelWithoutPrediction a INNER JOIN EnrollmentTrendsFilters b ON \na.OrganizationID=b.OrganizationID and a.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\nUPDATE a SET  a.SubFilterID=b.EnrollmentTrendsSubFiltersKey\nFROM ETDOrganizationLevelWithoutPrediction a INNER JOIN EnrollmentTrendsSubFilters b ON \na.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\nINSERT into ETDOrganizationLevelWithPrediction\nSELECT [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n      ,[MonthName]\n\t  ,[MonthNumber]\n      ,[MonthYear]\n\t  ,[Prediction]\t  \n      ,Sum([Enrollments]) as [Enrollments]\n      ,Avg([MAEligibles]) as [MAEligibles]\n      ,Avg([StabilityIndex])  as [StabilityIndex]    \n      ,Avg([Other_Dual_Full_Medicaid_Benefit])    as [Other_Dual_Full_Medicaid_Benefit]\n      ,Avg([QMB_Plus_Full_Medicaid_Benefits])   as [QMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SLMB_Plus_Full_Medicaid_Benefits]) as [SLMB_Plus_Full_Medicaid_Benefits]\n      ,Avg([SNP_Eligibles])    as [SNP_Eligibles]  \n\t  ,count(distinct BidId) as NoOfPlans,\n\t  null as FilterID,\n\t  null as SubFilterID\n  FROM [HWAIETDBTEST].[dbo].[EnrollmentTrendsData]\n  where Prediction='Yes'\n  group by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n      ,[MonthName]\n\t  ,[MonthNumber]\n      ,[MonthYear]\n\t  ,[Prediction]\n\t  order  by [StateID]\n      ,[CountyID]\n      ,[IndGroupPlansID]\n      ,[MAPDPID]\n      ,[SNPID]\n      ,[PlanTypeID]\n\t  ,[OrganizationID]\n      ,[Year]\n\t  ,[MonthYear]\n\t  ,[Prediction];\n\n\nUPDATE a SET  a.FilterID=b.PKey\nFROM ETDOrganizationLevelWithPrediction a INNER JOIN EnrollmentTrendsFilters b ON \na.OrganizationID=b.OrganizationID and a.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\nUPDATE a SET  a.SubFilterID=b.EnrollmentTrendsSubFiltersKey\nFROM ETDOrganizationLevelWithPrediction a INNER JOIN EnrollmentTrendsSubFilters b ON \na.StateID=b.StateID and\na.CountyID=b.CountyID and a.IndGroupPlansID=b.IndGroupPlansID and\na.MAPDPID =b.MAPDPID and a.SNPID=b.SNPID and a.PlanTypeID=b.PlanTypeID;\n\n\n\nTRUNCATE table [ETDPlans];\nINSERT into  [HWAIETDBTEST].[dbo].[ETDPlans]\nSELECT [MonthYear],[OrganizationID],count(distinct BidId) [NoOfplans]\nFROM EnrollmentTrendsData \nGROUP BY [MonthYear],[OrganizationID];\n\t   \nTRUNCATE table [EnrollmentTrendsMonthYear];\nINSERT into [EnrollmentTrendsMonthYear]\nSELECT distinct [Year],[MonthNumber],[Monthyear]\nFROM [HWAIETDBTEST].[dbo].[EnrollmentTrendsData]\nORDER BY [Year],[MonthNumber];\n--END\n\nexec sp_updatestats\n\nSELECT TOP 10 * FROM EnrollmentTrendsState;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable4",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Upload failed to Trends_CW_with_Predictions_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy_final_data_to_trends_cw_with_predictions",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA UPLOADED TO trends_cw_with_predictions failed\",\n \"color\":\"RED\",\n \"message\":\"Data uploaded failed pl debug\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Final data prep procedure succesfull",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Remaining data prep procedure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA PROCEDRE RAN succesfully\",\n \"color\":\"GREEN\",\n \"message\":\"Data prep procedure succesfull\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Final data prep procedure unsuccesfull",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Remaining data prep procedure",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"DATA PROCEDRE not succesfull\",\n \"color\":\"RED\",\n \"message\":\"DEBUG Data prep procedure\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Email update for failure of step3",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "enr_trends_post_broadcasting_step3",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR FINAL STEP FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends broadcasting step 3 script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy_final_data_to_trends_cw_with_predictions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate_trends_cw_with_predictions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Enrollment_trends_dashboard/Output_files",
									"wildcardFileName": "trends_cw_with_stabality_final_output.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Key_Cp_Id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stability_Index",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stability_Index",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Enr_final_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "string",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "string",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "string",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "string",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr_trends"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/enrollment_trends_gw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time update",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('enr_trends_gw_pre_broadcasting', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1a",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start time update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/enr_trends_gw_pre_broadcasting_step1a"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1a",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1a_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "send email update for enr pre broadcasting step1a",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1a_fail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR ENR PRE-BROADCASTING STEP 1a FAILED\",\n \"color\":\"RED\",\n \"message\":\"Debug the enr trends pre-broadcasting script and run the Pipeline again\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pre_broadcasting_step1b",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/Enr_trends_gw_pre_broadcasting_step1b"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1b_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1b_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1b",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1c_start_update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1b_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('enr_trends_gw_pre_broadcasting_step1c', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "pre_broadcasting_step1c",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1c_start_update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/enr_trends_gw_pre_broadcasting_step1c"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1c_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1c",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step1c_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "pre_broadcasting_step1c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "broadcasting_step_start",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "end time update for enr pre broadcasting step1c_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "INSERT INTO Audit(FileName, Operation, StartTime,Dashboard)\nValues('broadcasting_start', 'enr_trends_data_prep', (Select GETDATE()),'enr_trends');\nSelect * from Audit;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting_step2a",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "broadcasting_step_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/gw_broadcasting_folder/Enr_gw_broadcasting_step2a"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for broadcasting step2b",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2a",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step2a_fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting_step2b",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for broadcasting step2b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/gw_broadcasting_folder/Enr_gw_broadcasting_step2b"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for broadcasting step2b_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step2b fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2b",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Broadcasting_step2c",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for broadcasting step2b_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/gw_broadcasting_folder/Enr_gw_broadcasting_step2c"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "end time update for broadcasting step2c_pass",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2c",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'pass'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "end time update for enr pre broadcasting step2c fail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Broadcasting_step2c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Update Audit\nset EndTime = (Select GETDATE())\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nSET Status = 'fail'\nwhere Id = (select Count(*) from Audit);\n\nUpdate Audit\nset Timetaken = EndTime-StartTime\nwhere Id = (select Count(*) from Audit);\n\nSelect * from Audit;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dataset_sql",
								"type": "DatasetReference",
								"parameters": {
									"sql_server_dataset": {
										"value": "@pipeline().parameters.sql_server_dataset_name",
										"type": "Expression"
									},
									"db_name_dataset": {
										"value": "@pipeline().parameters.db_name",
										"type": "Expression"
									},
									"user_name_dataset": {
										"value": "@pipeline().parameters.user_name",
										"type": "Expression"
									},
									"password_dataset": {
										"value": "@pipeline().parameters.password",
										"type": "Expression"
									},
									"sql_table_name": "Audit"
								}
							}
						}
					},
					{
						"name": "Post_broadcasting_step",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "end time update for broadcasting step2c_pass",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/hwaitech@healthworksai.com/HWai_Monthly_refresh/Enrollment_trends_gateway/Enr_trends_gw_post_broadcasting_step3"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks4_pfcluster3",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sql_server_dataset_name": {
						"type": "string",
						"defaultValue": "hwpilot.database.windows.net"
					},
					"db_name": {
						"type": "string",
						"defaultValue": "pf_data"
					},
					"user_name": {
						"type": "string",
						"defaultValue": "pladmin"
					},
					"password": {
						"type": "string",
						"defaultValue": "Goteg@12345"
					}
				},
				"folder": {
					"name": "Hwai_Refresh/Hwai_enr_trends"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MS_Data_Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Eghp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Organization_Marketing_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Marketing_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ma_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "key",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "key",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Qdwi",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_65_To_74_Years",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_65_To_74_Years",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_75_To_84_Years",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_75_To_84_Years",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_85_Years_And_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_85_Years_And_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_Above_65",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_Above_65",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_Above_65_Male",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_Above_65_Male",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sex_And_Age_Population_Above_65_Female",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sex_And_Age_Population_Above_65_Female",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_In_Households_Above_65",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_In_Households_Above_65",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Above_65_Has_A_Computer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Above_65_Has_A_Computer",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_Above_65_With_Employer-Based_Health_Insurance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_Above_65_With_Employer-Based_Health_Insurance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_Above_65_With_Employer-Based_Health_Insurance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_Above_65_With_Employer-Based_Health_Insurance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_Above_65_With_Medicare_Coverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_Above_65_With_Medicare_Coverage",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_Above_65_No_Medicare_Coverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_Above_65_No_Medicare_Coverage",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_Above_65_With_Medicare_Coverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_Above_65_With_Medicare_Coverage",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_Above_65_No_Medicare_Coverage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_Above_65_No_Medicare_Coverage",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Male_65_To_74_Years",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Male_65_To_74_Years",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Male_75_Years_And_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Male_75_Years_And_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Female_65_To_74_Years",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Female_65_To_74_Years",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Female_75_Years_And_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Income_In_The_Past_12_Months_Below_Poverty_Level_Female_75_Years_And_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_65_To_74_Years_With_A_Disability",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_65_To_74_Years_With_A_Disability",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Male_75_Years_And_Over_With_A_Disability",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Male_75_Years_And_Over_With_A_Disability",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_65_To_74_Years_With_A_Disability",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_65_To_74_Years_With_A_Disability",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Female_75_Years_And_Over_With_A_Disability",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Female_75_Years_And_Over_With_A_Disability",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Household_Received_Snap_In_The_Past_12_Months_At_Least_One_Person_In_Household_60_Years_Or_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Household_Received_Snap_In_The_Past_12_Months_At_Least_One_Person_In_Household_60_Years_Or_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Not_Received_Snap_In_The_Past_12_Months_At_Least_One_Person_In_Household_60_Years_Or_Over",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Not_Received_Snap_In_The_Past_12_Months_At_Least_One_Person_In_Household_60_Years_Or_Over",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Above_65_Literate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Above_65_Literate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "D-SNP Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "D-SNP Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Out of Area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Out of Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Termination Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Termination Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText9",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable11",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Hwai_Refresh"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy ASAY DATA to DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "Competitor_Analysis/Output/AllstateAllyears",
									"wildcardFileName": "p*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Contract_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SSA_State_County_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FIPS_State_County_Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Statecode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Statecode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "enrollments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Parent_Organization",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Offers_Part_D",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Plan",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EGHP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Organization_Marketing_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Organization_Marketing_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Plan_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ma_eligibles",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "key",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "key",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Special_Needs_Plan_Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB only",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB only",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLMB plus Full Medicaid Benefits",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QDWI",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QI",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Dual Full Medicaid Benefit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNP_Eligibles",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MA Sales Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MA Sales Region",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MA Product Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MA Product Region",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Double County",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Double County",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GeographyID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "cpid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cpid",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ASAY_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable12",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetUserId",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT  CONCAT(CHAR(39), UserId ,CHAR(39)) from OrgUser;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "HealthWorksPlan_SQL_Analytics",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "UserId",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetUserId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserId",
							"value": {
								"value": "@{activity('GetUserId').output.value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "QueryFormatting",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "UserId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v2",
							"value": {
								"value": "@{replace(replace(replace(replace(replace(replace(replace(replace(replace(variables('UserId'),'[','('),']',')'),'\"',''),'{',''),'}',''),'UserId:',''),':',''),'(',''),')','')}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DeleteRecords",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "QueryFormatting",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT *  FROM OrgUser WHERE UserId NOT IN (@{variables('v2')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "User_table_Azure_prod",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"UserId": {
						"type": "String"
					},
					"v2": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_push_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "test_copy_data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table winning_plans",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "b10a_final_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T11:28:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Master_pipeline_benefit_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Benefits_10a_10b_13a",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_10a_10b_13a",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_13d_13e_13f",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_10a_10b_13a",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_13d_13e_13f",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_13g_14b_14c",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_13d_13e_13f",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_13g_14b_14c",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_16a_16b_17a",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_13g_14b_14c",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_16a_16b_17a",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_7f_7g_7h",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_7a_7b_7c",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_7f_7g_7h",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_7a_7b_7c",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_4c_11c_12",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_7a_7b_7c",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_7i_7j_7k",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_7f_7g_7h",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_7i_7j_7k",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_b2_b3_b20",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_16a_16b_17a",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Ben_b2_b3_b20",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_data_OON",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_1a_1b_pbp_c_vt",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_data_OON",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_9a_9b_9c",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_7i_7j_7k",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_9a_9b_9c",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_1a_1b_pbp_c_vt",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_9a_9b_9c",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_1a_1b_pbp_c_vt",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_4c_11c_12",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_b2_b3_b20",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_4c_11c_12",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "send email update for 10a_10b_13a",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_10a_10b_13a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_10a_10b_11a_11b_13a\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_10a_10b_13a').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 13d_13e_13f",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_13d_13e_13f",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_13b_13c_13d_13e_13f\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_13d_13e_13f').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 13g_14b_14c",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_13g_14b_14c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_13g_14a_14b_14c_14d\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_13g_14b_14c').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 16a_16b_17a",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_16a_16b_17a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_16a_16b_17a_17b_18a\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_16a_16b_17a').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 2_3_20",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_b2_b3_b20",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_b2_b3_4a_4b_b20\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_b2_b3_b20').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 4c_11c_12",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_4c_11c_12",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_4c_11c_12_14e_18b\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_4c_11c_12').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 7a_7b_7c",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_7a_7b_7c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_b5_b6_7a_7b_7c\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_7a_7b_7c').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 7f_7g_7h",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_7f_7g_7h",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_7d_7e_7f_7g_7h\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_7f_7g_7h').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 7i_7j_7k",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_7i_7j_7k",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_7i_7j_7k_8a_8b\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_7i_7j_7k').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 9a_9b_9c",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_9a_9b_9c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_9a_9b_9c_9d_15\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_9a_9b_9c').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 1a_1b",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_1a_1b_pbp_c_vt",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefits_1a_1b_19a_19b\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_1a_1b_pbp_c_vt').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for OON",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_data_OON",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefit_data_OON\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_data_OON').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Benefits_4a_4b_18a",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_data_OON",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_4a_4b_18a",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_7d_7e_6",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_4a_4b_18a",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_7d_7e_6",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_11a_11b_9d",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_7d_7e_6",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_11a_11b_9d",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_14a_14d",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_11a_11b_9d",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_14a_14d",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_15_8a_8b",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_14e_18b_5",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_15_8a_8b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_14e_18b_5",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_14a_14d",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_14e_18b_5",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_17b_13b_13c",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_SSBCI",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_17b_13b_13c",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Benefits_SSBCI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Benefits_15_8a_8b",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Benefits_SSBCI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "send email update for 4a_4b_18a",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_4a_4b_18a",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefit_data_OON\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_4a_4b_18a').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 7d_7e_6",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_7d_7e_6",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefit_data_OON\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_7d_7e_6').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 11a_11b_9d",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_11a_11b_9d",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefit_data_OON\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_11a_11b_9d').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 14a_14d",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_14a_14d",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefit_data_OON\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_14a_14d').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 14e_18b_5",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_14e_18b_5",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefit_data_OON\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_14e_18b_5').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 15_8a_8b",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_15_8a_8b",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefit_data_OON\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_15_8a_8b').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for SSBCI",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_SSBCI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefit_data_OON\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_SSBCI').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "send email update for 17b_13b_13c",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Benefits_17b_13b_13c",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-07.centralus.logic.azure.com:443/workflows/41ee3b475c3949a7a5b339451b7da176/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=L_dZ_r329mUA0Y029uo0EScLdKpIB5WuW_D8lJMZ4cU",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n \"title\":\"PIPELINE RUN FOR BENEFITS DATA UPDATE FAILED IN Benefit_data_OON\",\n \"color\":\"RED\",\n \"message\":\"@{activity('Benefits_17b_13b_13c').error.message}\",\n \"dataFactoryName\":\"@{pipeline().DataFactory}\",\n \"pipelineName\":\"@{pipeline().Pipeline}\",\n \"pipelineRunId\":\"@{pipeline().RunId}\",\n \"time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PF_Pipelines/AEP_Refresh"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T11:28:17Z"
			},
			"dependsOn": []
		}
	]
}